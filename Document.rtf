{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset238 Calibri;}{\f2\fnil Calibri;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang14 AI-alap\'fa novella\'edr\'f3 applik\'e1ci\'f3 fejleszt\'e9si szempontjai \par
\par
Az AI-alap\'fa novella\'edr\'f3 alkalmaz\'e1s c\'e9lja, hogy minim\'e1lis felhaszn\'e1l\'f3i input alapj\'e1n automatikusan hozzon l\'e9tre egy kerek t\'f6rt\'e9netet fejezetekre \'e9s alfejezetekre bontva. Az ilyen automatikus t\'f6rt\'e9netgener\'e1l\'e1s l\'e9nyege, hogy egy intelligens rendszer k\'e9pes legyen fikt\'edv t\'f6rt\'e9netet el\f1\'f5\f0\lang1033\'e1ll\'edtani n\'e9h\'e1ny kezdeti param\'e9terb\f1\'f5l (Part B 65 points Automated story generation As a decade of highly successful | Course Hero). Az ut\f0\'f3bbi \'e9vekben a m\'e9lytanul\'e1son alapul\'f3 nagy nyelvi modellek (pl. a GPT-csal\'e1d) v\'e1ltak a legn\'e9pszer\f1\'fbbb eszk\f0\'f6z\'f6kk\'e9 erre a c\'e9lra (Part B 65 points Automated story generation As a decade of highly successful | Course Hero). Ugyanakkor \'e9rdemes \'e1ttekinteni minden fejleszt\'e9si szempontot \f2\endash  a cselekm\f0\'e9ny gener\'e1l\'e1s\'e1t\'f3l a karaktereken \'e1t a dramaturgi\'e1ig \'e9s technol\'f3giai megval\'f3s\'edt\'e1sig \f2\endash  hiszen kor\f0\'e1bban szab\'e1lyalap\'fa m\'f3dszereket (pl. t\'f6rt\'e9net-grammatik\'e1k, tervez\f1\'f5 algoritmusok) is sikerrel alkalmaztak (Part B 65 points Automated story generation As a decade of highly successful | Course Hero). Az al\f0\'e1bbiakban r\'e9szletezz\'fck a f\f1\'f5bb szempontokat, a lehets\f0\'e9ges megk\'f6zel\'edt\'e9seket, valamint kit\'e9r\'fcnk a fejleszt\'e9s sor\'e1n felmer\'fcl\f1\'f5 kih\f0\'edv\'e1sokra \'e9s megold\'e1si \'f6tletekre. \par
\par
Plotgener\'e1l\'e1s (t\'f6rt\'e9netsz\'e1lak automatikus gener\'e1l\'e1sa) \par
\par
Egy izgalmas novella alapja a j\'f3l fel\'e9p\'edtett cselekm\'e9ny. A kih\'edv\'e1s az, hogy az AI koherens, \'e9rdekes t\'f6rt\'e9netsz\'e1lat \'e9s alfejezeteket hozzon l\'e9tre kezdeti \'f6tletek vagy param\'e9terek alapj\'e1n, emberi beavatkoz\'e1s n\'e9lk\'fcl. Mivel a legjobb t\'f6rt\'e9netekben a cselekm\'e9ny logikusan \'e9p\'edtkezik \'e9s kerek eg\'e9szet alkot, az AI-nak is valahogyan terveznie kell a sztori \'edv\'e9t el\f1\'f5re. N\f0\'e9h\'e1ny lehets\'e9ges megk\'f6zel\'edt\'e9s plotgener\'e1l\'e1shoz: \par
\par
Sablonok \'e9s grammatik\'e1k haszn\'e1lata: Az egyik hagyom\'e1nyos m\'f3dszer el\f1\'f5re defini\f0\'e1lt narrat\'edv sablonok vagy form\'e1lis t\'f6rt\'e9net-grammatik\'e1k alkalmaz\'e1sa. P\'e9ld\'e1ul l\'e9teznek rendszerek, amelyek Campbell \f2\'84h\f1\'f5s utaz\f0\'e1sa\rdblquote  (Hero\rquote s Journey) monom\'edtosz s\'e9m\'e1j\'e1t haszn\'e1lj\'e1k a cselekm\'e9ny v\'e1z\'e1nak gener\'e1l\'e1s\'e1hoz (untitled). Ilyenkor az emberi fejleszt\f1\'f5 el\'f5re megadja az egyes t\f0\'f6rt\'e9netf\'e1zisok (pl. felvezet\'e9s, kih\'edv\'e1s, megpr\'f3b\'e1ltat\'e1s, gy\f1\'f5zelem, hazat\f0\'e9r\'e9s) kereteit, \'e9s az AI ezeket felhaszn\'e1lva \'e1ll\'edtja \'f6ssze a magas szint\f1\'fb cselekm\f0\'e9nyv\'e1zat. Hasonl\'f3an alkalmazhat\'f3k Propp f\'e9le n\'e9pmesefunkci\'f3k vagy m\'e1s irodalmi s\'e9m\'e1k is sablonk\'e9nt. Az ilyen grammatikai megk\'f6zel\'edt\'e9s el\f1\'f5nye, hogy garant\f0\'e1lt a t\'f6rt\'e9net struktur\'e1lts\'e1ga \'e9s teljess\'e9ge, viszont korl\'e1tozhatja a kreativit\'e1st. (P\'e9ld\'e1ul a TEATRIX nev\f1\'fb interakt\f0\'edv narrat\'edvarendszer Propp grammatik\'e1j\'e1t haszn\'e1lta, \'e9s sablonokat t\'f6lt\'f6tt ki; a felhaszn\'e1l\'f3 kiv\'e1laszthatta a szerepl\f1\'f5ket \f0\'e9s azok tetteit, a sz\'e1m\'edt\'f3g\'e9p pedig a v\'e1laszt\'e1sok \'e9s a grammatikai szab\'e1lyok alapj\'e1n gener\'e1lta a k\'f6vetkez\f1\'f5 cselekm\f0\'e9nyelemet (untitled).) \par
\par
Tervez\'e9sen alapul\'f3 plotgener\'e1l\'e1s: A mesters\'e9ges intelligencia tervez\f1\'f5 algoritmusai (pl. AI tervez\'f5k, PDDL nyelv haszn\f0\'e1lata) alkalmasak lehetnek arra, hogy a t\'f6rt\'e9netet mint c\'e9l\'e1llapotok sorozat\'e1t fogj\'e1k fel, \'e9s l\'e9p\'e9sr\f1\'f5l l\f0\'e9p\'e9sre megtervezz\'e9k az oda vezet\f1\'f5 esem\f0\'e9nyeket (Part B 65 points Automated story generation As a decade of highly successful | Course Hero). A tervez\'e9s-alap\'fa megk\'f6zel\'edt\'e9s l\'e9nyege, hogy a t\'f6rt\'e9net gener\'e1l\'e1sa egy vagy t\'f6bb c\'e9l el\'e9r\'e9s\'e9re ir\'e1nyuljon (untitled). Ezek a c\'e9lok lehetnek p\'e9ld\'e1ul bizonyos karakterek \'e1llapotai (pl. \ldblquote a h\f1\'f5s legy\'f5zi a gonoszt\rdblquote  mint v\f0\'e9gc\'e9l), vagy \'e9rzelmi cs\'facspontok el\'e9r\'e9se. A tervez\f1\'f5 algoritmus megpr\f0\'f3b\'e1l esem\'e9nyl\'e1ncot alkotni, amely e c\'e9lokhoz vezet. Kutat\'e1sok kimutatt\'e1k, hogy az ilyen rendszerekben \'e9rdemes a szerepl\f1\'f5k \f0\'e9rzelmeit \'e9s motiv\'e1ci\'f3it modellezni, mert ez seg\'edt dr\'e1mai, \'e9rzelmileg hat\'e1sos esem\'e9nyeket l\'e9trehozni (untitled). P\'e9ld\'e1ul az UNIVERSE nev\f1\'fb korai plotgener\f0\'e1tor kifejezetten szappanopera-szer\f1\'fb melodramatikus konfliktusok gener\f0\'e1l\'e1s\'e1ra haszn\'e1lt tervez\'e9st, \'e9s figyelt arra, hogy a karakterek k\'f6z\'f6tt konfliktusok \'e9s kib\'e9k\'fcl\'e9sek alakuljanak ki a c\'e9lok ment\'e9n (untitled). A tervez\'e9ses megk\'f6zel\'edt\'e9s nagy el\f1\'f5nye a logikai k\f0\'f6vetkezetess\'e9g \f2\endash  biztos\f0\'edtja, hogy minden fontos fordulat c\'e9lorient\'e1lt legyen \f2\endash , de kih\f0\'edv\'e1s, hogy az \'edgy kapott v\'e1zlatot \'e1t kell alak\'edtani term\'e9szetes nyelv\f1\'fb elbesz\f0\'e9l\'e9ss\'e9. \par
\par
K\'e9tl\'e9pcs\f1\'f5s gener\f0\'e1l\'e1s (v\'e1zlat majd kidolgoz\'e1s): A modern megold\'e1sok gyakran \'f6tv\'f6zik a fenti m\'f3dszereket a nyelvi modellekkel. Az egyik bev\'e1lt m\'f3dszer, hogy az AI el\f1\'f5bb egy cselekm\f0\'e9nyv\'e1zlatot vagy fejezet-\'f6sszefoglal\'f3kat gener\'e1l, majd ezt kibontva \'edrja meg a teljes t\'f6rt\'e9netet. Egy friss kutat\'e1s is r\'e1mutat, hogy egy ilyen k\'e9tf\'e1zis\'fa megk\'f6zel\'edt\'e9ssel jav\'edthat\'f3 a t\'f6rt\'e9net koherenci\'e1ja: el\f1\'f5sz\f0\'f6r a rendszer megalkotja a t\'f6rt\'e9net v\'e1zlat\'e1t (f\f1\'f5bb esem\f0\'e9nyek, fordul\'f3pontok felsorol\'e1s\'e1val), m\'e1sodik l\'e9p\'e9sben pedig ezt a v\'e1zlatot teljes sz\'f6vegg\'e9 b\f1\'f5v\f0\'edti ([2010.08822] Consistency and Coherency Enhanced Story Generation). A plotv\'e1z jelenl\'e9te explicit m\'f3don r\'f6gz\'edti a cselekm\'e9ny f\f1\'f5 sz\f0\'e1lait, ez\'e1ltal az AI az \'edr\'e1s sor\'e1n mindig tudja, merre kell tartania, mi a k\'f6vetkez\f1\'f5 nagy esem\f0\'e9ny. Ezzel a m\'f3dszerrel jobban kontroll\'e1lhat\'f3 \'e9s garant\'e1lhat\'f3 a cselekm\'e9ny k\'f6vetkezetess\'e9ge ([2010.08822] Consistency and Coherency Enhanced Story Generation). Gyakorlati megval\'f3s\'edt\'e1sban ez jelentheti azt, hogy p\'e9ld\'e1ul el\f1\'f5sz\f0\'f6r fejezetc\'edmeket vagy r\'f6vid fejezet-\'f6sszefoglal\'f3kat hozunk l\'e9tre, majd mindegyiket k\'fcl\'f6n kibontjuk egy-egy alfejezeti sz\'f6vegg\'e9. \par
\par
Neur\'e1lis h\'e1l\'f3zati sz\'f6vegfolytat\'e1s (nagy nyelvi modellek): A jelenlegi leger\f1\'f5sebb nyelvi modellek, mint a GPT-4, k\f0\'e9pesek arra, hogy egy kezd\f1\'f5 mondat vagy bekezd\f0\'e9s alapj\'e1n teljes t\'f6rt\'e9neteket folytassanak le. A fejleszt\f1\'f5i szempont itt az, hogyan \f2\'84ir\f0\'e1ny\'edtsuk\rdblquote  a modellt, hogy struktur\'e1lt, t\'f6bbfejezetes sz\'f6veget \'e1ll\'edtson el\f1\'f5. A nagy nyelvi modellekn\f0\'e9l neh\'e9zs\'e9g, hogy hossz\'fa t\'e1v\'fa mem\'f3ri\'e1juk korl\'e1tozott, \'edgy egy reg\'e9ny vagy novella teljes sz\'f6vege meghaladn\'e1 azt a terjedelmet, amit egyszerre figyelembe tudnak venni. Ez\'e9rt tipikusan fejezetenk\'e9nt vagy jelenetenk\'e9nt gener\'e1ltatunk vel\'fck, mindig az el\f1\'f5zm\f0\'e9nyeket \'f6sszegzett form\'e1ban visszaadva a promptban, hogy eml\'e9kezzenek a kontextusra. A nyelvi modellek er\f1\'f5ss\f0\'e9ge a kreativit\'e1s \'e9s foly\'e9konys\'e1g \f2\endash  gyakran meglep\f1\'f5en gazdag le\f0\'edr\'e1sokat \'e9s p\'e1rbesz\'e9deket produk\'e1lnak minim\'e1lis v\'e1z alapj\'e1n is. Ugyanakkor figyelni kell a koherenci\'e1ra \'e9s logik\'e1ra: \'f6nmagukban hajlamosak lehetnek elt\'e9rni a t\'e1rgyt\'f3l vagy ellentmond\'e1sba keveredni (pl. egy lez\'e1rt cselekm\'e9nysz\'e1lat \'fajra el\f1\'f5hozni). A fent eml\f0\'edtett v\'e1zlatk\'f6vet\'e9ses technika vagy megfelel\f1\'f5 prompt engineering (pl. minden fejezet elej\f0\'e9n eml\'e9keztetj\'fck a modellt a f\f1\'f5 c\f0\'e9lokra \'e9s eddigi t\'f6rt\'e9n\'e9sekre) seg\'edthet ezen a probl\'e9m\'e1n. \'c9rdemes megjegyezni, hogy egy tanulm\'e1ny szerint b\'e1r a GPT-2 jelleg\f1\'fb modellek j\f0\'f3l teljes\'edtenek t\'f6rt\'e9net\'edr\'e1sban, gyakori probl\'e9ma n\'e1luk a k\'f6vetkezetlens\'e9g (pl. a cselekm\'e9ny sz\'e1la sz\'e9tcs\'faszik, vagy hib\'e1s visszautal\'e1sok jelennek meg) \'e9s az, hogy nem mindig tartj\'e1k szem el\f1\'f5tt a glob\f0\'e1lis logikai kapcsol\'f3d\'e1st a mondatok k\'f6z\'f6tt ([2010.08822] Consistency and Coherency Enhanced Story Generation). Ezekre a kih\'edv\'e1sokra \'e9ppen a k\'fcl\'f6n outline vagy expliciten kezelt mem\'f3ria jelenti a megold\'e1st. \par
\par
Szimul\'e1ci\'f3s vagy agent-alap\'fa t\'f6rt\'e9netalkot\'e1s: Egy m\'e1sik megk\'f6zel\'edt\'e9s, hogy a t\'f6rt\'e9net esem\'e9nyeit nem k\'f6zvetlen\'fcl a rendszer gener\'e1lja le narrat\'edvak\'e9nt, hanem t\'f6bb, auton\'f3m \ldblquote karakter\'fcgyn\'f6k\rdblquote  szimul\'e1ci\'f3j\'e1b\'f3l \'e1ll \'f6ssze a cselekm\'e9ny. Ebben a paradigm\'e1ban minden fontosabb karakter egy saj\'e1t AI modul (vagy alrutin), amelynek vannak c\'e9ljai, szem\'e9lyis\'e9ge, \'e9s szimul\'e1lt m\'f3don interakci\'f3ba l\'e9pnek egym\'e1ssal. A t\'f6rt\'e9net tulajdonk\'e9ppen e virtu\'e1lis szerepl\f1\'f5k k\f0\'f6zti akci\'f3k sorozat\'e1b\'f3l bontakozik ki, amit azt\'e1n egy narr\'e1tor modul nyelvi form\'e1ba \'f6nt. Kutat\'e1sok szerint p\'e9ld\'e1ul a szerepl\f1\'f5k egy\f0\'e9ni c\'e9lvez\'e9relt viselked\'e9se is haszn\'e1lhat\'f3 a cselekm\'e9ny el\f1\'f5re vitel\f0\'e9re: a REGEN nev\f1\'fb rendszer eset\f0\'e9ben a t\'f6rt\'e9netet \'fagy \'e1ll\'edtott\'e1k el\f1\'f5, hogy szimul\f0\'e1lt\'e1k a karakterek k\'f6zti kapcsolatokat \'e9s c\'e9lokat, \'e9s ezek k\'f6lcs\'f6nhat\'e1saib\'f3l \'e9p\'fclt fel a cselekm\'e9ny (untitled). Ez a m\'f3dszer a nyitott vil\'e1g\'fa j\'e1t\'e9kokhoz \'e9s interakt\'edv narrat\'edv\'e1khoz hasonl\'edt: a t\'f6rt\'e9net menet\'e9t az hat\'e1rozza meg, hogy a virtu\'e1lis szerepl\f1\'f5k mit tesznek a virtu\f0\'e1lis vil\'e1gban. El\f1\'f5nye, hogy nagyon dinamikus \f0\'e9s v\'e1ltozatos sztorikat eredm\'e9nyezhet (hiszen ha a kiindul\'e1si param\'e9tereken v\'e1ltoztatunk, a szimul\'e1ci\'f3 eg\'e9szen m\'e1s ir\'e1nyt vehet), \'e9s a karakterek hitelesebbek lehetnek, mivel \f2\'84\f0\'f6n\'e1ll\'f3an cselekednek\rdblquote . Ugyanakkor neh\'e9z biztos\'edtani, hogy a szimul\'e1ci\'f3s \'faton kapott esem\'e9nysor kiel\'e9g\'edt\f1\'f5 dramaturgi\f0\'e1val b\'edrjon \f2\endash  elk\f0\'e9pzelhet\f1\'f5, hogy emberi szemmel fontos elemek kimaradnak vagy lapos lesz a t\f0\'f6rt\'e9net \'edve. Ennek kik\'fcsz\'f6b\'f6l\'e9s\'e9re gyakran kombin\'e1lj\'e1k a szimul\'e1ci\'f3t valamilyen magas szint\f1\'fb vez\f0\'e9rl\f1\'f5 mechanizmussal (pl. egy dr\f0\'e1mamenedzser figyeli a szimul\'e1ci\'f3t, \'e9s k\'f6zbeavatkozik, ha nincs el\'e9g konfliktus vagy a t\'f6rt\'e9net t\'fal hamar lez\'e1rul). Ez viszont m\'e1r \'f6sszetett rendszertervez\'e9si feladat, ami t\'falmutat az egyszeri nyelvi modell haszn\'e1lat\'e1n. \par
\par
Kih\'edv\'e1sok a plotgener\'e1l\'e1sban: A legnagyobb kih\'edv\'e1s a fenti m\'f3dszerek kombin\'e1l\'e1sa sor\'e1n a koherencia meg\f1\'f5rz\f0\'e9se \'e9s az \'e9rdekes, nem lapos cselekm\'e9ny biztos\'edt\'e1sa. A modell hajlamos lehet elt\'e9vedni hossz\'fa t\'f6rt\'e9net gener\'e1l\'e1sakor, \'faj szerepl\f1\'f5ket vagy sz\f0\'e1lakat behozni \'e9s elhagyni k\'f6vetkezetlen m\'f3don. Tov\'e1bb\'e1, egy gener\'e1lt t\'f6rt\'e9net lehet grammatikailag t\'f6k\'e9letes, m\'e9gis unalmas, ha hi\'e1nyzik bel\f1\'f5le a fesz\f0\'fclts\'e9g vagy az \'fajdons\'e1g. Fejleszt\f1\'f5k\f0\'e9nt ez\'e9rt \'e9rdemes szab\'e1lyokat vagy ellen\f1\'f5rz\'f5 mechanizmusokat be\f0\'e9p\'edteni: p\'e9ld\'e1ul minden fejezet v\'e9g\'e9n automatikusan ellen\f1\'f5rizz\f0\'fck, hogy maradt-e nyitott konfliktus, amit tov\'e1bb lehet vinni; vagy \'e9pp ellenkez\f1\'f5leg, hogy a t\f0\'f6rt\'e9net egy pontj\'e1n a konfliktus fokoz\'f3dik-e, ha pedig nem, gener\'e1ljunk oda egy v\'e1ratlan fordulatot. A m\'e1sik kih\'edv\'e1s a hossz\'fa t\'e1v\'fa tervez\'e9s: egy reg\'e9ny terjedelm\f1\'fb m\'fbn\f0\'e9l az elej\'e9n elvetett magoknak a v\'e9g\'e9re ki kell futniuk (pl. egy mell\'e9kszerepl\f1\'f5 \f0\'e1ltal elejtett inform\'e1ci\'f3 a v\'e9g\'e9n kulcsszerepet kapjon). Az AI-nak nincs val\'f3di \f2\'84tervez\f1\'f5 tudata\rdblquote , ez\f0\'e9rt ezeket a foreshadowing jelleg\f1\'fb elemeket tudatosan kell a gener\f0\'e1l\'e1si folyamatba integr\'e1lni \f2\endash  p\f0\'e9ld\'e1ul a v\'e1zlatk\'e9sz\'edt\'e9s f\'e1zis\'e1ban el\f1\'f5re beiktatni bizonyos elemek visszat\f0\'e9r\'e9s\'e9t. \par
\par
Lehets\'e9ges megold\'e1sok: A v\'e1zolt k\'e9tl\'e9pcs\f1\'f5s gener\f0\'e1l\'e1s (outline + kidolgoz\'e1s) az egyik leger\f1\'f5sebb m\f0\'f3dszer a koherencia biztos\'edt\'e1s\'e1ra ([2010.08822] Consistency and Coherency Enhanced Story Generation). Emellett a fejleszt\'e9s sor\'e1n j\'f3l haszn\'e1lhat\'f3k a min\f1\'f5s\f0\'e9gellen\f1\'f5rz\'f5 hurok: pl. egy k\f0\'fcl\'f6n modul/f\'fcggv\'e9ny v\'e9gign\'e9zi a m\'e1r meg\'edrt t\'f6rt\'e9netet \'e9s jelzi az esetleges logikai buktat\'f3kat vagy kihagyott sz\'e1lakat (ehhez ak\'e1r egy m\'e1sik nyelvi modellt is ig\'e9nybe vehet\'fcnk, ami kritikus szemmel elemzi a sz\'f6veget). Az is egy megold\'e1s, ha az AI \'e1ltal gener\'e1lt v\'e1zlatot vagy teljes sztorit ember szerkeszt\f1\'f5 is \f0\'e1ttekinti (f\'e9lautomata megk\'f6zel\'edt\'e9s), b\'e1r a k\'e9rd\'e9s\'fcnk tiszt\'e1n automatikus gener\'e1l\'e1sra ir\'e1nyul. V\'e9g\'fcl, a k\'fcl\'f6nb\'f6z\f1\'f5 technik\f0\'e1k kombin\'e1l\'e1sa \f2\endash  p\f0\'e9ld\'e1ul tervez\'e9s + nyelvi modell \f2\endash  hozhatja a legjobb eredm\f0\'e9nyt: a tervez\f1\'f5 algoritmus biztos\f0\'edtja a logikus szerkezetet, a nyelvi modell pedig kit\'f6lti azt \'e9lvezetes sz\'f6veggel. \par
\par
Karakteralkot\'e1s (m\'e9ly \'e9s hiteles szerepl\f1\'f5k l\f0\'e9trehoz\'e1sa) \par
\par
A j\'f3 t\'f6rt\'e9net kulcsa a \'e9rdekes \'e9s hiteles karakterek megl\'e9te. Az AI sz\'e1m\'e1ra a kih\'edv\'e1s nem csup\'e1n nevek \'e9s k\'fcls\f1\'f5 jellemz\'f5k kital\f0\'e1l\'e1sa, hanem m\'e9lys\'e9g ad\'e1sa a szerepl\f1\'f5knek: egyedi szem\f0\'e9lyis\'e9g, motiv\'e1ci\'f3k, jellemfejl\f1\'f5d\f0\'e9s, hiteles p\'e1rbesz\'e9d \'e9s viselked\'e9s. Hogyan seg\'edthet ebben az AI, \'e9s mire figyelj\'fcnk fejleszt\f1\'f5k\f0\'e9nt? \par
\par
Karakterprofil gener\'e1l\'e1sa AI-jal: A nyelvi modellek kiv\'e1l\'f3an alkalmasak arra, hogy n\'e9h\'e1ny t\'e1mpont alapj\'e1n r\'e9szletes karakterle\'edr\'e1sokat k\'e9sz\'edtsenek. P\'e9ld\'e1ul, ha a felhaszn\'e1l\'f3 megadja, hogy szeretne egy b\'e1tor, de naiv fiatal h\f1\'f5st, akkor a modelllel gener\f0\'e1ltathatunk egy teljes karakterlapot: n\'e9v, k\'fcls\f1\'f5 megjelen\f0\'e9s, alapvet\f1\'f5 szem\f0\'e9lyis\'e9gjegyek, h\'e1tt\'e9rt\'f6rt\'e9net, f\'e9lelmek \'e9s v\'e1gyak stb. M\'e1r l\'e9teznek erre specializ\'e1lt AI eszk\'f6z\'f6k is \f2\endash  egyes t\f0\'f6rt\'e9netgener\'e1torok karaktergener\'e1tork\'e9nt is m\f1\'fbk\f0\'f6dnek, \'e9s gombnyom\'e1sra l\'e9trehoznak egy szerepl\f1\'f5t n\f0\'e9vvel, szem\'e9lyis\'e9ggel \'e9s h\'e1tt\'e9rrel (AI Story Generator: A New Era of Storytelling). Fejleszt\'e9si szempontb\'f3l \'e9rdemes ezt a funkci\'f3t integr\'e1lni: az alkalmaz\'e1s k\'e9sz\'edtsen vagy k\'e9rjen karakterv\'e1zlatokat a gener\'e1l\'e1s el\f1\'f5tt. \f0\'cdgy a t\'e9nyleges t\'f6rt\'e9net\'edr\'e1si f\'e1zisban m\'e1r lesz egy adatb\'e1zisunk a szerepl\f1\'f5kr\'f5l, amib\'f5l az AI \ldblquote t\f0\'e1pl\'e1lkozhat\rdblquote . \par
\par
Motiv\'e1ci\'f3k \'e9s jellemfejl\f1\'f5d\f0\'e9s: Hogy a karakterek m\'e9lynek \'e9s hihet\f1\'f5nek t\'fbnjenek, fontos, hogy legyenek c\f0\'e9ljaik, bels\f1\'f5 konfliktusaik \f0\'e9s fejl\f1\'f5d\f0\'e9s\'fck a t\'f6rt\'e9net sor\'e1n. Ezt \'fagy \'e9rhetj\'fck el AI-jal, hogy a karakterprofil r\'e9szek\'e9nt defini\'e1lunk egy kezdeti \'e1llapotot (pl. \ldblquote f\'e9l a felel\f1\'f5ss\f0\'e9gt\f1\'f5l\rdblquote ) \f0\'e9s egy c\'e9l\'e1llapotot (pl. \ldblquote a t\'f6rt\'e9net v\'e9g\'e9re felel\f1\'f5ss\f0\'e9gteljes vezet\f1\'f5v\f0\'e9 v\'e1lik\rdblquote ), majd a t\'f6rt\'e9net gener\'e1l\'e1sakor \'fcgyel\'fcnk r\'e1, hogy a karakter cselekedetei \'e9s a vele t\'f6rt\'e9n\f1\'f5 esem\f0\'e9nyek ebbe az ir\'e1nyba terelj\'e9k. Az AI-nak persze ezt nem k\'f6nny\f1\'fb mag\f0\'e1t\'f3l kital\'e1lnia, de ha el\f1\'f5re belefoglaljuk a promptba vagy a v\f0\'e1zlatba a karakter\'edv f\f1\'f5 pontjait, akkor k\f0\'e9pes k\'f6vetkezetesen v\'e9gigvinni. P\'e9ld\'e1ul a fejezet-\'f6sszefoglal\'f3ban szerepelhet: \ldblquote Ebben a fejezetben a h\f1\'f5s el\'f5sz\f0\'f6r szembes\'fcl azzal, hogy m\'e1sok t\f1\'f5le v\f0\'e1rj\'e1k a megold\'e1st \f2\endash  b\f0\'e1r k\'e9telkedik mag\'e1ban, tesz egy bizonytalan l\'e9p\'e9st a vezet\f1\'f5v\f0\'e9 v\'e1l\'e1s \'fatj\'e1n.\rdblquote  Az ilyen instrukci\'f3k seg\'edtenek, hogy a gener\'e1lt sz\'f6vegben a karakter viselked\'e9se illeszkedjen az \'e9rzelmi \'edv\'e9hez. \par
\par
Konzisztencia \'e9s eml\'e9kezet: Az AI hajlamos lehet elfelejteni a kor\'e1bban l\'e9trehozott karakterjellemz\f1\'f5ket, ha azok nincsenek folyamatosan a figyelme f\f0\'f3kusz\'e1ban. Fejleszt\f1\'f5k\f0\'e9nt biztos\'edtanunk kell, hogy a fontos karakteradatok mindig jelen legyenek valamilyen form\'e1ban a gener\'e1l\'e1s kontextus\'e1ban. Ennek egyik m\'f3dja a szerepl\f1\'f5kre vonatkoz\f0\'f3 kulcsinform\'e1ci\'f3k t\'e1rol\'e1sa \'e9s beemel\'e9se. P\'e9ld\'e1ul tarthatunk fenn egy struktur\'e1lt objektumot minden karakterhez (n\'e9v, kor, kin\'e9zet, szem\'e9lyis\'e9g, kapcsolatok), \'e9s minden fejezet gener\'e1l\'e1sakor a prompt v\'e9g\'e9re hozz\'e1f\f1\'fbzhetj\f0\'fck az adott fejezetben szerepl\f1\'f5 karakterek relev\f0\'e1ns adatait: \ldblquote Eml\'e9keztet\f1\'f5: John egy 30 \f0\'e9ves, szarkasztikus humor\'fa rend\f1\'f5r, aki f\f0\'e9l a magass\'e1gt\'f3l; Mary John h\'faga, visszah\'faz\'f3d\'f3 \'e9s okos.\rdblquote  \'cdgy a modell kisebb es\'e9llyel tesz ellentmond\'e1sos kijelent\'e9seket vagy v\'e1ltoztat meg \'f6nk\'e9nyesen egy tulajdons\'e1got. A k\'f6vetkezetess\'e9g nemcsak az olyan t\'e9nyekre terjed ki, mint hajsz\'edn vagy \'e9letkor, hanem a besz\'e9dst\'edlusra \'e9s viselked\'e9sre is. Ha az egyik karakter\'fcnk eddig v\'e1laszt\'e9kosan \'e9s udvariasan besz\'e9lt, ne kezdjen hirtelen szlengben k\'e1romkodni (hacsak nem a t\'f6rt\'e9net r\'e9szek\'e9nt indokolt v\'e1ltoz\'e1s). Ennek \'e9rdek\'e9ben alkalmazhatunk karakter-specifikus hangnemet: pl. minden egyes p\'e1rbesz\'e9d gener\'e1l\'e1sakor megmondhatjuk a modellnek, hogy XY karakter milyen st\'edlusban besz\'e9ljen. A nagy modellek k\'e9pesek ut\'e1nozni st\'edlusjegyeket, ha k\'f6vetkezetesen k\'e9rj\'fck t\f1\'f5l\f0\'fck. \par
\par
Hiteless\'e9g \'e9s egyedis\'e9g: A m\'e9lyebb karakterek kialak\'edt\'e1s\'e1nak tr\'fckkje, hogy klis\'e9k helyett egyedi von\'e1sokat kapjanak. Az AI tr\'e9ningadatai sajnos tele vannak sablonos karakterekkel (pl. a \ldblquote sz\f1\'f5ke herceg\rdblquote  vagy a \ldblquote gonosz tud\f0\'f3s\rdblquote  klis\'e9ivel), \'e9s hajlamos lehet ezeket reproduk\'e1lni. Fejleszt\f1\'f5k\f0\'e9nt erre figyeln\'fcnk kell, \'e9s tudatosan bele\'e9p\'edteni a promptba vagy az utas\'edt\'e1sokba a k\'edv\'e1nt egyedi elemeket. P\'e9ld\'e1ul: \ldblquote Hozz l\'e9tre egy f\f1\'f5h\'f5st, aki els\'f5re tipikus sz\'f5ke hercegnek t\'fbnik, de val\f0\'f3j\'e1ban diszlexi\'e1s \'e9s im\'e1d kert\'e9szkedni\rdblquote  \f2\endash  m\f0\'e1ris van k\'e9t-h\'e1rom olyan von\'e1s, amit\f1\'f5l nem tucatfigura lesz. Az AI k\f0\'f6nnyen gener\'e1l ehhez hasonl\'f3 extra r\'e9szleteket, ha k\'e9rj\'fck. Fontos m\'e9g a motiv\'e1ci\'f3k tiszt\'e1z\'e1sa: minden f\f1\'f5bb szerepl\'f5n\f0\'e9l j\'f3, ha az AI tudja, mit akar az adott karakter \'e9s mi\'e9rt. Ezek a motiv\'e1ci\'f3k fogj\'e1k vez\'e9relni a tetteiket \'e9s hiteless\'e9 tenni a reakci\'f3ikat. Ezt is \'e9rdemes el\f1\'f5re lefektetni (ak\f0\'e1r bullet pointokban a karakterlap r\'e9szek\'e9nt), majd a t\'f6rt\'e9net gener\'e1l\'e1sakor \'e9s ellen\f1\'f5rz\f0\'e9sekor v\'e9gigtekinteni, hogy a cselekedeteik \'f6sszhangban vannak-e a motiv\'e1ci\'f3ikkal. \par
\par
Kih\'edv\'e1sok a karakteralkot\'e1sban: Az AI gener\'e1lta karakterekkel kapcsolatban f\f1\'f5k\f0\'e9nt a sek\'e9lyess\'e9g \'e9s k\'f6vetkezetlens\'e9g jelent gondot. Egy nyelvi modell k\'f6nnyen gy\'e1rt le\'edr\'e1st egy szerepl\f1\'f5r\'f5l, de m\f0\'e9lys\'e9get adni nehezebb \f2\endash  azaz el\f0\'e9rni, hogy a karakter \'e1t\'e9lhet\f1\'f5nek hasson az olvas\f0\'f3 sz\'e1m\'e1ra. Ennek hi\'e1ny\'e1ban a t\'f6rt\'e9net is lapos maradhat, hi\'e1ba van izgalmas cselekm\'e9ny. A m\'e1sik gyakori probl\'e9ma a karakterek k\'f6zti viszonyok kezel\'e9se: az AI egyszer le\'edrja, hogy k\'e9t szerepl\f1\'f5 r\f0\'e9gi bar\'e1t, majd k\'e9s\f1\'f5bb \f0\'fagy kezeli \f1\'f5ket, mintha alig ismern\f0\'e9k egym\'e1st, ha nem figyel\'fcnk. Ezenfel\'fcl a coreferencia hib\'e1k is zavar\'f3ak lehetnek \f2\endash  pl. a modell \f0\'f6sszekeverheti a n\'e9vm\'e1sokat \'e9s rosszul utal vissza, ami az olvas\'f3nak zavaros (egy tanulm\'e1ny szerint a GPT-2 \'e1ltal gener\'e1lt t\'f6rt\'e9netekben gyakoriak az ilyen hib\'e1k, hacsak nincs k\'fcl\'f6n kezel\'e9s\'fck ([2010.08822] Consistency and Coherency Enhanced Story Generation)). \par
\par
Megold\'e1si \'f6tletek: A probl\'e9m\'e1k orvosl\'e1s\'e1ra bev\'e1lt m\'f3dszer a karakterlapok folyamatos haszn\'e1lata a gener\'e1l\'e1s sor\'e1n, ahogy fentebb eml\'edtett\'fck. Tov\'e1bb\'e1 hasznos lehet egy ut\'f3feldolgoz\'f3 l\'e9p\'e9s: miut\'e1n a t\'f6rt\'e9net elk\'e9sz\'fclt, v\'e9gigfuttathatunk egy szkriptet vagy egy m\'e1sodlagos AI-t, ami kifejezetten a karakterek konzisztenci\'e1j\'e1t ellen\f1\'f5rzi. P\f0\'e9ld\'e1ul \'f6sszehasonl\'edtja a t\'f6rt\'e9net elej\'e9n \'e9s v\'e9g\'e9n adott jellemz\'e9st ugyanarr\'f3l a szerepl\f1\'f5r\'f5l, vagy megn\f0\'e9zi, hogy ha X \'e9s Y testv\'e9rek, akkor mindenhol ennek megfelel\f1\'f5en viselkednek-e. Az olyan nyelvi modellek, mint GPT-4, magukt\f0\'f3l is el\'e9g j\'f3l tudnak karakterh\f1\'fb sz\f0\'f6veget alkotni, ha megfelel\f1\'f5en utas\f0\'edtjuk \f1\'f5ket \f2\endash  ezt ki lehet haszn\f0\'e1lni: few-shot learning technik\'e1val p\'e9ld\'e1kat adunk a modellnek arra, milyen m\'e9ly karakter\'e1br\'e1zol\'e1st v\'e1runk, \'edgy k\'e9s\f1\'f5bb azt fogja k\f0\'f6vetni. V\'e9g\'fcl, \'e9rdemes lehet a gener\'e1lt sz\'f6veget emberi \'e9rz\'e9kenys\'e9ggel is \'e1tolvasni a tesztel\'e9si f\'e1zisban, \'e9s finom\'edtani a promptokat vagy a karakterle\'edr\'e1sokat az alapj\'e1n, amit hi\'e1nyoss\'e1gk\'e9nt \'e9szlel\'fcnk (p\'e9ld\'e1ul ha a visszajelz\'e9s az, hogy \ldblquote XY motiv\'e1ci\'f3ja nem volt \'e9rthet\f1\'f5\rdblquote , akkor jobban kiemelhetj\f0\'fck azt az AI sz\'e1m\'e1ra a k\'f6vetkez\f1\'f5 iter\f0\'e1ci\'f3ban). \par
\par
Dramaturgia (a t\'f6rt\'e9net \'e9rzelmi \'edv\'e9nek \'e9s fesz\'fclts\'e9g\'e9nek ir\'e1ny\'edt\'e1sa) \par
\par
A dramaturgia arra vonatkozik, hogyan van fel\'e9p\'edtve a t\'f6rt\'e9net \'e9rzelmi hull\'e1mz\'e1sa, milyen a temp\'f3, mikor vannak cs\'facspontok \'e9s lehiggad\'e1sok, hogyan fokoz\'f3dik a fesz\'fclts\'e9g \'e9s old\'f3dik meg a konfliktus. Egy j\'f3 novella tipikusan bevonz az elej\'e9n, egyre nagyobb t\'e9tet \'e9s fesz\'fclts\'e9get teremt a k\'f6zep\'e9n, \'e9s a cs\'facsponton kulmin\'e1l, majd megnyugtat\'f3 lez\'e1r\'e1st ad a v\'e9g\'e9n. Ezt gyakran dramaturgiai \'edvnek vagy \'e9rzelmi \'edvnek nevezz\'fck. Klaszszikus p\'e9lda r\'e1 Freytag piramisa, ami \'f6t szakaszra osztja a dr\'e1m\'e1t: expoz\'edci\'f3, n\'f6vekv\f1\'f5 akci\f0\'f3 (bonyodalom), klimax, hanyatl\'f3 akci\'f3 (felold\'e1s), katasztr\'f3fa/megold\'e1s (Freytag\rquote s Pyramid: Definitions and Examples of Dramatic Structure). A k\'e9rd\'e9s, hogy egy AI mik\'e9nt tudja ezt tudatosan megval\'f3s\'edtani, \'e9s milyen eszk\'f6z\'f6kkel vez\'e9relhetj\'fck fejleszt\f1\'f5k\f0\'e9nt a modell \'e1ltal gener\'e1lt sz\'f6veg hangulat\'e1t. \par
\par
T\'f6rt\'e9net\'edv el\f1\'f5re tervez\f0\'e9se: Hasonl\'f3an a cselekm\'e9nyv\'e1zlat k\'e9sz\'edt\'e9shez, \'e9rdemes a dramaturgiai \'edvet is el\f1\'f5re megtervezni. Ez gyakorlatban jelentheti azt, hogy meghat\f0\'e1rozzuk, h\'e1ny fejezetre/oszt\'e1sra bontjuk az elbesz\'e9l\'e9st, \'e9s melyik r\'e9sz mely dramaturgiai funkci\'f3t t\'f6ltse be. P\'e9ld\'e1ul: 1. fejezet \f2\endash  expoz\f0\'edci\'f3 (bemutatjuk a vil\'e1got, nyugodt hangulat), 2-3. fejezet \f2\endash  bonyodalmak (egyre fokoz\f0\'f3d\'f3 konfliktusok, fesz\'fclts\'e9g n\f1\'f5), 4. fejezet \f2\endash  tet\f1\'f5pont (dr\f0\'e1mai cs\'facshelyzet, nagy \'e9rzelmi kit\'f6r\'e9s), 5. fejezet \f2\endash  lez\f0\'e1r\'e1s (probl\'e9m\'e1k megold\'e1sa, visszat\'e9r\'e9s a nyugalomhoz). Ha ilyen v\'e1zlatot adunk a nyelvi modellnek, akkor a gener\'e1l\'e1s sor\'e1n jobban fog igazodni az \'e9rzelmi \'edvhez. A modell pl. tudni fogja, hogy a 4. fejezetben kifejezetten felfokozott jelenetet kell produk\'e1lnia, m\'edg az 5.-ben el kell varrnia a sz\'e1lakat megnyugtat\'f3 m\'f3don. Ez\'e1ltal elker\'fclhet\f1\'f5, hogy t\f0\'fal kor\'e1n els\'fclj\'f6n a cs\'facspont, vagy \'e9pp ellenkez\f1\'f5leg, elmaradjon a katarzis. \par
\par
\f0\'c9rzelmi \'e1llapotok \'e9s fesz\'fclts\'e9g monitoroz\'e1sa: Mivel az AI nem \'e9rez val\'f3di fesz\'fclts\'e9get, valamilyen m\'f3don kvantifik\'e1lni kell a hangulatot ahhoz, hogy szab\'e1lyozhassuk. Egy \'f6tlet a szentimentelemz\'e9s alkalmaz\'e1sa a gener\'e1lt sz\'f6vegre: minden fejezet ut\'e1n lefuttathatunk egy sentiment analysis modult, ami numerikus \'e9rt\'e9ket ad a sz\'f6veg hangulat\'e1ra (pozit\'edv\f2\endash negat\f0\'edv sk\'e1la), vagy ak\'e1r egy bonyolultabb \'e9rzelemelemz\f1\'f5t, ami k\f0\'fcl\'f6n m\'e9ri a f\'e9lelem, izgalom, \'f6r\'f6m stb. szintj\'e9t. Ezt az \'e9rt\'e9ket felhaszn\'e1lhatjuk arra, hogy visszacsatoljuk a rendszerbe: ha a fesz\'fclts\'e9g t\'fal alacsony egy olyan ponton, ahol n\f1\'f5nie k\f0\'e9ne, akkor utas\'edthatjuk az AI-t, hogy gener\'e1ljon valami v\'e1ratlan konfliktust vagy fordulatot. Ak\'e1r val\'f3s id\f1\'f5ben, interakt\f0\'edvan is lehet ilyet: a dr\'e1mamenedzser koncepci\'f3ja, amit fentebb eml\'edtett\'fcnk, l\'e9nyeg\'e9ben ezt csin\'e1lja. Emellett akad kutat\'e1s, amely hatalmas irodalmi korpuszokon v\'e9gzett elemz\'e9ssel gyakori narrat\'edv \'e9rzelmi mint\'e1zatokat azonos\'edtott \f2\endash  egy ilyen projekt p\f0\'e9ld\'e1ul 1737 k\'f6nyvet elemezve hat tipikus \'e9rzelmi \'edvet k\'fcl\'f6n\'edtett el a t\'f6rt\'e9netekben (Artificial Intelligence Identifies the Six Main Arcs in Storytelling: Welcome to the Brave New World of Literary Criticism | Open Culture). Ezek p\'e9ld\'e1ul: \ldblquote felemelked\'e9s\rdblquote  (eleinte negat\'edv, azt\'e1n egyre pozit\'edvabb a hangulat \f2\endash  klasszikus happy end t\f0\'f6rt\'e9netek), \ldblquote trag\'e9dia\rdblquote  (eleinte semleges/pozit\'edv, de egyre s\'f6t\'e9tebb lesz, rossz v\'e9ggel), \ldblquote Ikarosz\rdblquote  (felemelked\'e9s, majd zuhan\'e1s) stb. Ha ismerj\'fck ezeket a mint\'e1zatokat, ak\'e1r el\f1\'f5re kiv\f0\'e1laszthatjuk, melyikhez hasonl\'f3t szeretn\'e9nk, \'e9s ennek megfelel\f1\'f5en alak\f0\'edtjuk a t\'f6rt\'e9net menet\'e9t. \par
\par
Fesz\'fclts\'e9g \'e9s konfliktus adagol\'e1sa: Fontos, hogy a t\'f6rt\'e9netnek legyen ritmusa \f2\endash  v\f0\'e1ltakozzanak benne a nyugodtabb \'e9s fesz\'fclt jelenetek. Egy AI k\'f6nnyen beleeshet abba a hib\'e1ba, hogy t\'fal egyhang\'fa marad a hangv\'e9tel (pl. v\'e9gig akci\'f3d\'fas, vagy v\'e9gig m\'e9lab\'fas), mert nem \'e9rzi intuit\'edvan, hogy az olvas\'f3nak id\f1\'f5nk\f0\'e9nt sz\'fcks\'e9ge van sz\'fcnetre, m\'e1skor meg izgalomra. Ezt explicit utas\'edt\'e1sokkal vagy a v\'e1zlatba iktatott megjegyz\'e9sekkel kontroll\'e1lhatjuk. P\'e9ld\'e1ul jelezhetj\'fck: \ldblquote A 3. fejezet v\'e9g\'e9n hagyjunk cliffhanger helyzetet, f\'fcgg\f1\'f5ben marad\f0\'f3 konfliktussal, hogy az olvas\'f3 izguljon\rdblquote , vagy \ldblquote A 4. fejezet elej\'e9n legyen egy pillanatnyi fell\'e9legz\'e9s egy humoros jelenettel, miel\f1\'f5tt a v\f0\'e9gs\f1\'f5 \f0\'f6sszecsap\'e1sra sor ker\'fcl.\rdblquote  Az AI ezeket az ir\'e1nymutat\'e1sokat k\'f6vetve be\'e9p\'edt a sz\'f6vegbe egy kis vicces p\'e1rbesz\'e9det vagy egy olyan jelenetet, ami kicsit levezeti az el\f1\'f5z\'f5 fejezet fesz\f0\'fclts\'e9g\'e9t, majd \'fajra emelheti a t\'e9tet. Mechanizmusok is \'e9p\'edthet\f1\'f5k erre: pl. egy fesz\f0\'fclts\'e9gszint-v\'e1ltoz\'f3, ami k\'f6veti, hogy \'e9pp mennyire intenz\'edv a sztori, \'e9s a prompt dinamikusan tartalmazhatja ezt (\ldblquote Fesz\'fclts\'e9gszint = 8/10: nagyon fesz\'fclt hangulat, nagy t\'e9ttel j\'e1r\'f3 jelenet k\'f6vetkezik.\rdblquote ). \par
\par
Dramaturgiai sablonok \'e9s narrat\'edv eszk\'f6z\'f6k: A j\'f3l bev\'e1lt dramaturgiai eszk\'f6z\'f6ket is \ldblquote megtan\'edthatjuk\rdblquote  az AI-nak. Ilyen eszk\'f6z p\'e9ld\'e1ul a foreshadowing (el\f1\'f5reutal\f0\'e1s), a plot twist (v\'e1ratlan fordulat), a p\'e1rhuzamos sz\'e1lak \'f6sszevezet\'e9se, stb. Ezeket a gener\'e1l\'e1s el\f1\'f5tt \f0\'e9rdemes \'e1tgondolni, \'e9s be\'e9p\'edteni a tervbe. P\'e9ld\'e1ul mondhatjuk a modellnek: \ldblquote Rejts el finom utal\'e1sokat arra, hogy XY val\'f3j\'e1ban a f\f1\'f5gonosz, de ne legyen egy\f0\'e9rtelm\f1\'fb \f2\endash  a csattan\f0\'f3 majd a v\'e9g\'e9n der\'fclj\'f6n ki.\rdblquote  \'cdgy a modell gener\'e1lhat apr\'f3 gyan\'fas jeleket a sz\'f6vegben. A f\f1\'f5 konfliktus megfelel\'f5 kezel\f0\'e9se is dramaturgiai k\'e9rd\'e9s: \'fcgyelni kell r\'e1, hogy legyen egy k\'f6zponti probl\'e9ma, ami v\'e9gigh\'faz\'f3dik, \'e9s ne old\'f3djon meg a t\'f6rt\'e9net k\'f6zepe el\f1\'f5tt. Ezt kik\f0\'e9nyszer\'edthetj\'fck azzal, hogy a feladatmegad\'e1sban kihangs\'falyozzuk: \ldblquote A v\'e9gs\f1\'f5 megold\f0\'e1s csak az utols\'f3 fejezetben j\'f6jj\'f6n el, addig n\'f6veld a fesz\'fclts\'e9get\rdblquote . Az AI \'edgy nem fogja id\f1\'f5 el\'f5tt lez\f0\'e1rni a konfliktust, hanem halogatja a felold\'e1st (esetleg red herring mell\'e9kkonfliktusokat gener\'e1l k\'f6zben, ami szint\'e9n egy j\'f3l ismert narrat\'edv fog\'e1s). \par
\par
Kih\'edv\'e1sok a dramaturgi\'e1ban: Automatikus gener\'e1l\'e1sn\'e1l gyakori probl\'e9ma, hogy a t\'f6rt\'e9net laposs\'e1 vagy kaotikuss\'e1 v\'e1lik \'e9rzelmi szempontb\'f3l. Laposs\'e1 akkor, ha nincsenek igazi hull\'e1mhegyek-v\'f6lgyek \f2\endash  az olvas\f0\'f3 nem \'e9rez t\'e9tet. Kaotikuss\'e1 pedig akkor, ha a fesz\'fclts\'e9g \'f6ssze-vissza ugr\'e1l, a cs\'facspontok nem a megfelel\f1\'f5 helyen vannak, vagy a befejez\f0\'e9s antiklimatikus. Mivel a modellek nem \'e9rzik az izgalmat, k\'f6nnyen csin\'e1lhatnak ilyet. A m\'e1sik kih\'edv\'e1s a megfelel\f1\'f5 hangnem fenntart\f0\'e1sa: egy horrorisztikus, s\'f6t\'e9t t\'f6rt\'e9netn\'e9l ne t\'f6rj\'f6n meg a komor hangulat egy oda nem ill\f1\'f5 viccel, hacsak nem sz\f0\'e1nd\'e9kos. Az AI n\'e9ha st\'edlust v\'e1lthat akaratlanul, ha egy \'faj bekezd\'e9st kezd an\'e9lk\'fcl, hogy eml\'e9keztetn\'e9nk, milyen hangulatot v\'e1runk. \par
\par
Megold\'e1sok: A dramaturgia kontrollj\'e1ra szerencs\'e9re t\'f6bb eszk\'f6z is van. Az el\f1\'f5re meg\f0\'edrt plot\'edv vagy fejezetle\'edr\'e1sok biztos\'edthatj\'e1k, hogy j\'f3 helyen legyenek a cs\'facspontok. A sentiment vagy \'e9rzelem alap\'fa ellen\f1\'f5rz\f0\'e9s (ak\'e1r emberi tesztolvas\'f3kkal is, nem csak automat\'e1n) seg\'edthet kiegyens\'falyozni az \'edvet: ha pl. kider\'fcl, hogy a t\'f6rt\'e9net k\'f6zep\'e9n ellaposodik, akkor \'fajrah\'fazhatjuk az adott r\'e9szt t\'f6bb konfliktussal. Fontos a m\f1\'fbfaj tudatos\f0\'edt\'e1sa is a modell fel\'e9: m\'e1s dramaturgi\'e1t k\'edv\'e1n egy thriller (folyamatos suspense, gyakori fordulatok) \'e9s m\'e1st egy l\'edrai sz\'e9pirodalmi novella (szolidabb \'edv, ink\'e1bb \'e9rzelmi fejl\f1\'f5d\f0\'e9s mint k\'fcls\f1\'f5 akci\f0\'f3). Ha a felhaszn\'e1l\'f3 m\f1\'fbfajt v\f0\'e1laszt, azt mind dramaturgiai mint\'e1t is felfoghatjuk, \'e9s ennek megfelel\f1\'f5en param\f0\'e9terezhetj\'fck a gener\'e1l\'e1st. P\'e9ld\'e1ul egy romantikus t\'f6rt\'e9netn\'e9l tudatosan lehet alkalmazni a \ldblquote\'f6sszevesznek majd kib\'e9k\'fclnek\rdblquote  \'e9rzelmi hull\'e1mot, m\'edg egy kalandfantasyn\'e1l a \ldblquote kalandok sorozata, mindegyik mini-cs\'facsponttal a v\'e9gs\f1\'f5 nagy csata el\'f5tt\rdblquote  s\f0\'e9m\'e1t. \'d6sszess\'e9g\'e9ben a dramaturgia ter\'e9n a legf\f1\'f5bb megold\f0\'e1s a kontroll\'e1lt gener\'e1l\'e1s: nem hagyjuk teljesen a modellre a strukt\'far\'e1t, hanem magas szinten megadjuk neki, milyen \'e9rzelmi hat\'e1st szeretn\'e9nk el\'e9rni az egyes szakaszokban. \par
\par
AI modellek \'e9s agentek (megfelel\f1\'f5 algoritmusok a gener\f0\'e1l\'e1shoz) \par
\par
Ebben a r\'e9szben azt vizsg\'e1ljuk meg, milyen AI modelleket vagy t\'f6bb-agentes megk\'f6zel\'edt\'e9st \'e9rdemes haszn\'e1lni a novella\'edr\'f3 alkalmaz\'e1sban, \'e9s melyik f\'e1zisra melyik a legalkalmasabb. A mai AI-eszk\'f6zt\'e1rban t\'f6bb nagy nyelvi modell is rendelkez\'e9sre \'e1ll, mindegyiknek megvannak az el\f1\'f5nyei \f0\'e9s korl\'e1tai. Emellett sz\'f3 esik arr\'f3l is, hogy t\'f6bb egy\'fcttm\f1\'fbk\f0\'f6d\f1\'f5 modell (agent) rendszere hogyan seg\f0\'edthet a t\'f6rt\'e9netgener\'e1l\'e1sban. \par
\par
GPT-3.5/GPT-4 (OpenAI): Az OpenAI GPT modellek (k\'fcl\'f6n\'f6sen a GPT-4) jelenleg a legfejlettebbek k\'f6z\'e9 tartoznak a term\'e9szetes nyelvi gener\'e1l\'e1s ter\'e9n. El\f1\'f5ny\f0\'fck a kiemelked\f1\'f5 nyelvi foly\f0\'e9konys\'e1g, \'f6sszetett \'f6sszef\'fcgg\'e9sek meg\'e9rt\'e9se \'e9s k\'f6vet\'e9se, valamint hogy rengeteg vil\'e1gismeretet hordoznak (a tr\'e9ningadatb\'e1zisb\'f3l fakad\'f3an). GPT-4 p\'e9ld\'e1ul emberi szint\f1\'fb nyelvi meg\f0\'e9rt\'e9st \'e9s kreativit\'e1st mutat, \'edgy nagyon alkalmas st\'edlusos \'e9s \'f6sszetett narrat\'edva \'edr\'e1s\'e1ra. H\'e1tr\'e1nyuk, hogy z\'e1rt forr\'e1s\'faak \'e9s csak felh\f1\'f5 API-n kereszt\f0\'fcl \'e9rhet\f1\'f5ek el, k\f0\'f6lts\'e9gvonzattal. Fejleszt\f1\'f5i szempotb\f0\'f3l ez azt jelenti, hogy az alkalmaz\'e1snak internetkapcsolatra \'e9s OpenAI API hozz\'e1f\'e9r\'e9sre van sz\'fcks\'e9ge. Tov\'e1bb\'e1 a maxim\'e1lis kontextusablak m\'e9rete korl\'e1tozott: GPT-4 eset\'e9n jelenleg ~8K vagy 32K token (modellt\f1\'f5l f\f0\'fcgg\f1\'f5en), ami kb. 6-24 ezer sz\f0\'f3nak felel meg. Egy teljes reg\'e9ny meghaladn\'e1 ezt, ez\'e9rt a prompt szegment\'e1l\'e1st \'edgy is meg kell oldani. Ett\f1\'f5l eltekintve GPT-4 egy \f0\'e1ltal\'e1nos, mindenre kiterjed\f1\'f5 megold\f0\'e1s lehet a t\'f6rt\'e9net minden szakasz\'e1ra: haszn\'e1lhatjuk cselekm\'e9ny v\'e1zlatol\'e1sra, dial\'f3gusok gener\'e1l\'e1s\'e1ra, le\'edr\'f3 r\'e9szekre, s\f1\'f5t ak\f0\'e1r k\'f3dtud\'e1sa r\'e9v\'e9n bels\f1\'f5 logikai ellen\'f5rz\f0\'e9sekre is. A gyakorlatban GPT-4-gyel vagy 3.5-tel is remek t\'f6rt\'e9netek gener\'e1lhat\'f3k, de a fejleszt\'e9s sor\'e1n figyelni kell a k\'f6lts\'e9gekre (minden h\'edv\'e1s token d\'edjas) \'e9s a k\'e9sleltet\'e9sre (nagy v\'e1laszokn\'e1l t\'f6bb m\'e1sodperc). \par
\par
LLaMA 2 \'e9s egy\'e9b ny\'edlt modellek: A Meta \'e1ltal kiadott LLaMA 2 \'e9s m\'e1s open-source nagy nyelvi modellek (pl. Bloom, GPT-J, NeoX stb.) alternat\'edv\'e1t jelentenek a z\'e1rt modellekkel szemben. El\f1\'f5ny\f0\'fck, hogy ny\'edlt forr\'e1sk\'f3d\'faak, \'edgy futtathat\'f3k saj\'e1t szerveren vagy ak\'e1r er\f1\'f5s helyi g\f0\'e9pen, a m\f1\'fbk\f0\'f6d\'e9s\'fck bels\f1\'f5 logik\f0\'e1ja \'e1tl\'e1that\'f3, \'e9s testre is szabhat\'f3k (finomhangolhat\'f3k) adott ig\'e9nyekre (Llama AI: A Comprehensive Comparison with GPT Models). Ez ut\'f3bbi fontos: egy ny\'edlt modellt tov\'e1bb lehet tan\'edtani speci\'e1lisan t\'f6rt\'e9net\'edr\'f3 adatokon, \'edgy potenci\'e1lisan jobban fog teljes\'edteni egy ilyen applik\'e1ci\'f3ban. A LLaMA 2 70B p\'e9ld\'e1ul el\'e9g er\f1\'f5s sz\f0\'f6veg\'e9rt\'e9st \'e9s -gener\'e1l\'e1st mutat, b\'e1r m\'e9g nem \'e9ri el GPT-4 szintj\'e9t mindenben. H\'e1tr\'e1nyuk viszont, hogy \'e1ltal\'e1ban alacsonyabb a kontextuslimitj\'fck \'e9s n\'e9mileg gyeng\'e9bb a teljes\'edtm\'e9ny\'fck a cs\'facskateg\'f3ri\'e1s z\'e1rt modellekhez viszony\'edtva (Llama AI: A Comprehensive Comparison with GPT Models). A LLaMA 2 alap\'e9rtelmezetten ~4K token k\'f6r\'fcli bemenetet kezel (b\'e1r vannak hossz\'fa kontextus\'fa finomhangol\'e1sok is, pl. 32K tokenes v\'e1ltozatok k\'f6z\'f6ss\'e9gi projektekben). Tov\'e1bb\'e1 a futtat\'e1sukhoz sz\'fcks\'e9ges infrastrukt\'fara a fejleszt\f1\'f5 felel\'f5ss\f0\'e9ge: egy 70 milli\'e1rd param\'e9teres modell futtat\'e1sa nagy mem\'f3riaig\'e9ny\f1\'fb (GPU-kon kell futtatni, vagy optimumra van sz\f0\'fcks\'e9g). A ny\'edlt modellek eset\'e9ben teh\'e1t a sk\'e1l\'e1zhat\'f3s\'e1g \'e9s optimaliz\'e1ci\'f3 kih\'edv\'e1s lehet, cser\'e9be k\'f6lts\'e9ghat\'e9konyabb hossz\'fa t\'e1von, hiszen nincs tokenenk\'e9nti d\'edj. \'d6sszess\'e9g\'e9ben a LLaMA 2 akkor j\'f3 v\'e1laszt\'e1s, ha azt szeretn\'e9nk, hogy az alkalmaz\'e1s offline vagy saj\'e1t szerveren is m\f1\'fbk\f0\'f6dj\'f6n, \'e9s ha hajland\'f3ak vagyunk energi\'e1t fektetni a testreszab\'e1s\'e1ba. Az \ldblquote agytr\'f6szt\rdblquote  funkci\'f3kat (cselekm\'e9nytervez\'e9s, vil\'e1gle\'edr\'e1s) r\'e1b\'edzhatjuk LLaMA-ra is, m\'edg a finomabb nyelvi sim\'edt\'e1sokat esetleg GPT-vel v\'e9geztethetj\'fck, ha hibrid megold\'e1sban gondolkodunk. \par
\par
Claude (Anthropic): Az Anthropic \'e1ltal fejlesztett Claude 2 modell egy \'fajabb szerepl\f1\'f5, amelynek k\f0\'fcl\'f6nlegess\'e9ge a rendk\'edv\'fcl nagy kontextusablak. Claude k\'e9pes ak\'e1r 100 ezer token hossz\'fa inputot is bevenni egyben (Claude 2 \\ Anthropic), ami k\'f6r\'fclbel\'fcl egy teljes reg\'e9nynek felel meg (~75 ezer sz\'f3). Ez azt jelenti, hogy Claude-dal elvileg megtehetj\'fck, hogy az eg\'e9sz addig meg\'edrt t\'f6rt\'e9netet egyben a promptban tartjuk, amikor a k\'f6vetkez\f1\'f5 fejezetet gener\f0\'e1ljuk \f2\endash  \f0\'edgy szinte biztosan eml\'e9kezni fog minden r\'e9szletre, ellentmond\'e1s n\'e9lk\'fcl. Ez \'f3ri\'e1si el\f1\'f5ny a hossz\f0\'fa tartalmak gener\'e1l\'e1s\'e1n\'e1l. Claude nyelvi k\'e9pess\'e9gei nagyj\'e1b\'f3l a GPT-3.5/GPT-4 kateg\'f3ri\'e1j\'e1ba esnek; egyes feladatokban gyeng\'e9bb, m\'e1sokban hasonl\'f3. Jellemz\f1\'f5je m\f0\'e9g, hogy kev\'e9sb\'e9 hajlamos toxikus vagy nem k\'edv\'e1nt tartalmakat gener\'e1lni (az Anthropic a biztons\'e1gra k\'fcl\'f6n hangs\'falyt fektet). H\'e1tr\'e1nya, hogy szint\'e9n z\'e1rt modell \'e9s csak felh\f1\'f5szolg\f0\'e1ltat\'e1son kereszt\'fcl \'e9rhet\f1\'f5 el, valamint a nagy kontextus feldolgoz\f0\'e1sa is jelent\f1\'f5s sz\f0\'e1m\'edt\'e1si k\'f6lts\'e9g (\'e9s monet\'e1ris k\'f6lts\'e9g). Ha az appban fontos, hogy a felhaszn\'e1l\'f3 \'e1ltal be\'edrt r\'e9szletes param\'e9tereket, h\'e1tt\'e9rinform\'e1ci\'f3kat, vagy a m\'e1r legener\'e1lt 10 fejezetet mind figyelembe vegye a modell a 11. fejezet \'edr\'e1sakor, akkor Claude lehet az ide\'e1lis v\'e1laszt\'e1s. P\'e9ld\'e1ul egy \f2\'84t\f0\'f6rt\'e9net folytat\'e1sa\rdblquote  jelleg\f1\'fb feladatn\f0\'e1l, ahol a user ak\'e1r t\'f6bb oldalnyi vil\'e1gbe\'e1ll\'edt\'e1st ad meg, Claude gond n\'e9lk\'fcl be tudja ezt venni a promptba, m\'edg mondjuk GPT-3.5-n\'e9l darabolni k\'e9ne. \par
\par
Egy\'e9b specializ\'e1lt modellek: L\'e9teznek kifejezetten t\'f6rt\'e9net\'edr\'e1sra kihegyezett modellek/szolg\'e1ltat\'e1sok is, pl. NovelAI, Sudowrite, AI Dungeon stb. Ezek gyakran a fenti alapmodellek egy\'e9ni finomhangolt v\'e1ltozatai, vagy azok k\'f6r\'e9 \'e9p\'edtett speci\'e1lis mem\'f3riarendszerek. Fejleszt\f1\'f5k\f0\'e9nt d\'f6nthet\'fcnk \'fagy is, hogy nem saj\'e1t magunk rakjuk \'f6ssze a pipelinet, hanem integr\'e1lunk egy ilyen k\'e9sz szolg\'e1ltat\'e1st (ha licencelhet\f1\'f5). Viszont mivel a k\f0\'e9rd\'e9s az egyedi applik\'e1ci\'f3 fejleszt\'e9s\'e9re ir\'e1nyul, val\'f3sz\'edn\f1\'fbleg a saj\f0\'e1t megold\'e1s \'e9p\'edt\'e9se a c\'e9l. Emellett \'e9rdemes megeml\'edteni a T5 vagy BART modellek finomhangolt verzi\'f3it is, amelyek kutat\'e1sokban szerepeltek t\'f6rt\'e9netgener\'e1l\'e1sra \f2\endash  b\f0\'e1r ezek ma m\'e1r n\'e9mileg h\'e1tt\'e9rbe szorultak a nagy transformer modellek mellett. \par
\par
T\'f6bb AI modul egy\'fcttm\f1\'fbk\f0\'f6d\'e9se (agents): Az \ldblquote AI agent\rdblquote  kifejez\'e9s itt utalhat arra, hogy t\'f6bb k\'fcl\'f6n\'e1ll\'f3 algoritmus vagy modell dolgozik \'f6ssze a t\'f6rt\'e9net elk\'e9sz\'edt\'e9s\'e9n. Ez egyfajta modul\'e1ris megk\'f6zel\'edt\'e9s: minden modul egy \'fcgyn\'f6k, amelynek saj\'e1t feladata van, \'e9s ezek kommunik\'e1lnak egym\'e1ssal. P\'e9ld\'e1ul elk\'e9pzelhet\f1\'f5 egy pipeline, ahol: \par
\par
Az 1. agent egy tervez\'f5 (Planner) \f2\endash  ez gener\f0\'e1l egy v\'e1zlatot vagy plotot (ezt lehet, hogy nem is nyelvi modell, hanem egy tervez\f1\'f5 algoritmus v\f0\'e9gzi PDDL-lel vagy hasonl\'f3val, de lehet egy kisebb nyelvi modell is, amit erre tren\'edrozunk). \par
\par
A 2. agent egy narr\'e1tor \f2\endash  ez fogja a plotot \f0\'e9s kidolgozza irodalmi sz\'f6vegg\'e9 (ez lehet egy nagy GPT modell). \par
\par
A 3. agent egy dial\'f3gus gener\'e1tor \f2\endash  speci\f0\'e1lisan p\'e1rbesz\'e9deket \'edr a karakterek szem\'e9lyis\'e9g\'e9nek megfelel\f1\'f5en (ezt k\f0\'fcl\'f6n is kezelhetj\'fck, hogy a besz\'e9lget\'e9sek term\'e9szetesebbek legyenek). \par
\par
A 4. agent egy editor vagy kritikus \f2\endash  v\f0\'e9gigolvasva a k\'e9sz sz\'f6veget, kijav\'edtja a hib\'e1kat, vagy javaslatot tesz \'e1tfogalmaz\'e1sra bizonyos r\'e9szekn\'e9l. \par
\par
Ezek az agentek sorban (vagy iterat\'edvan oda-vissza kommunik\'e1lva) m\f1\'fbk\f0\'f6dhetnek. P\'e9ld\'e1ul a kritikus agent visszajelez a narr\'e1tornak, hogy \ldblquote ebben a fejezetben a f\f1\'f5h\'f5s t\f0\'fal passz\'edv, jav\'edtsd \'e1t kicsit izgalmasabbra\rdblquote , \'e9s a narr\'e1tor \'fajragener\'e1lja vagy m\'f3dos\'edtja azt a r\'e9szt. Az ilyen t\'f6bb\'fcgyn\'f6k\'f6s architekt\'fara nagyon rugalmas \'e9s elvileg magas min\f1\'f5s\f0\'e9ghez vezethet, hiszen mintha egy eg\'e9sz \'edr\'f3g\'e1rda dolgozna a t\'f6rt\'e9neten (egy ember megtervezi, m\'e1sik meg\'edrja, harmadik szerkeszti). Ugyanakkor a komplexit\'e1sa sokkal nagyobb: meg kell oldani a kommunik\'e1ci\'f3t k\'f6zt\'fck, a d\'f6nt\'e9shozatalt, \'e9s a hibalehet\f1\'f5s\f0\'e9gek is megsokszoroz\'f3dnak. \par
\par
Egy m\'e1sik agent-alap\'fa megk\'f6zel\'edt\'e9s a m\'e1r eml\'edtett szimul\'e1lt karakter\'fcgyn\'f6k\'f6k (NPC-k) haszn\'e1lata, amit ak\'e1r kombin\'e1lhatunk a fenti narr\'e1torral: az agentek \ldblquote elj\'e1tssz\'e1k\rdblquote  a t\'f6rt\'e9netet a h\'e1tt\'e9rben, a narr\'e1tor pedig sz\'e9pen megfogalmazza. Ez a m\'f3dszer k\'f6zel\'edt az emergens t\'f6rt\'e9netmes\'e9l\'e9shez, ahol a t\'f6rt\'e9net nem el\f1\'f5re megtervezett, hanem a szimul\f0\'e1ci\'f3b\'f3l bukkan el\f1\'f5. Fejleszt\f0\'e9si szempontb\'f3l ez \'fatt\'f6r\f1\'f5 jelleg\'fb lehet, de igen bonyolult, \f0\'e9s neh\'e9z garant\'e1lni a dramatikus kiel\'e9g\'edt\f1\'f5s\f0\'e9get. \par
\par
Kih\'edv\'e1sok a modellek/agentek kiv\'e1laszt\'e1s\'e1ban: Az els\f1\'f5 dilemma, hogy egy modell vagy t\f0\'f6bbr\'e9sztvev\f1\'f5s rendszer legyen. Egyetlen nagy modell (pl. GPT-4) mindent meg tud oldani viszonylag egyszer\'fben, de nehezebb ir\f0\'e1ny\'edtani a bels\f1\'f5 m\'fbk\f0\'f6d\'e9s\'e9t. T\'f6bb specializ\'e1lt modell egy\'fcttm\f1\'fbk\f0\'f6d\'e9se prec\'edzebben hangolhat\'f3 eredm\'e9nyt adhat, viszont a rendszer integr\'e1ci\'f3ja nehezebb \'e9s a hibakock\'e1zat n\f1\'f5 (pl. mi van, ha a planner agent rossz v\f0\'e1zlatot ad, azt\'e1n azt a narr\'e1tor h\f1\'fben meg\f0\'edrja \f2\endash  a v\f0\'e9geredm\'e9ny nem lesz j\'f3, \'e9s ezt detekt\'e1lni kell valahogy). A m\'e1sik kih\'edv\'e1s a modell korl\'e1tai: ha ny\'edlt forr\'e1s\'fa modellt haszn\'e1lunk, sz\'e1molni kell azzal, hogy bizonyos komplex helyzetekben gyeng\'e9bb eredm\'e9nyt ad. Ha z\'e1rtat, akkor a f\'fcgg\f1\'f5s\f0\'e9g \'e9s k\'f6lts\'e9g a probl\'e9ma. A konteosztus-m\'e9ret is sarkalatos: egy hossz\'fa reg\'e9nyhez ide\'e1lis esetben egyben k\'e9ne l\'e1tni az eg\'e9sz sz\'f6veget a gener\'e1l\'e1s sor\'e1n. Ha erre k\'e9ptelen a v\'e1lasztott modell (pl. GPT-3.5), akkor ki kell dolgozni az alternat\'edv megold\'e1sokat (chunkol\'e1s, mem\'f3ria). V\'e9g\'fcl, t\'f6bb agent eset\'e9n a kommunik\'e1ci\'f3s protokoll kital\'e1l\'e1sa is fontos: pl. milyen form\'e1tumban adja \'e1t a planner a plotot a narr\'e1tornak (sz\'f6veges list\'e1ban? JSON-ben struktur\'e1ltan?), vagy hogyan jelezzen vissza az editor agent a narr\'e1tornak an\'e9lk\'fcl, hogy minden belekeveredne. \par
\par
Javaslatok \'e9s megold\'e1sok: A gyakorlatban \'e9rdemes lehet fokozatosan \'e9p\'edtkezni. El\f1\'f5sz\f0\'f6r v\'e1lasztani egy er\f1\'f5s nyelvi modellt (ha lehet, GPT-4 vagy Claude 2 a min\'f5s\f0\'e9g miatt), \'e9s kipr\'f3b\'e1lni, hogyan boldogul egy egyszer\f1\'fb promptb\f0\'f3l t\'f6rt\'e9net gener\'e1l\'e1s\'e1val. Majd bevezetni neki egy outline seg\'e9dletet, megn\'e9zni, azzal javul-e a szerkezet. Ut\'e1na esetleg beiktatni egy m\'e1sodik modellt, pl. egy kisebb ny\'edlt modellt, ami a v\'e1zlatot k\'e9sz\'edti, m\'edg a nagy modell \'edr \f2\endash  ezzel cs\f0\'f6kkentve a nagy modell terhel\'e9s\'e9t \'e9s k\'f6lts\'e9g\'e9t. A modul\'e1ris fel\'e9p\'edt\'e9sbe l\'e9p\'e9senk\'e9nt vonhatunk be \'faj agenteket, mindig ellen\f1\'f5rizve, hogy az eg\f0\'e9sz rendszer m\'e9g \'e1tl\'e1that\'f3 \'e9s kontroll\'e1lhat\'f3 marad-e. Fontos a tesztel\'e9s: k\'fcl\'f6nb\'f6z\f1\'f5 hossz\f0\'fas\'e1g\'fa \'e9s m\f1\'fbfaj\f0\'fa t\'f6rt\'e9netekkel kipr\'f3b\'e1lni, hogy a v\'e1lasztott modell(ek) produkci\'f3ja mennyire koherens \'e9s \'e9lvezhet\f1\'f5. P\f0\'e9ld\'e1ul lehet, hogy kider\'fcl: GPT-3.5-tel is megoldhat\'f3 a feladat, ha nagyon j\'f3 promptot adunk neki \'e9s fejezetenk\'e9nt h\'edvjuk, \'edgy nem kell GPT-4-et haszn\'e1lni minden\'e1ron. Vagy az der\'fcl ki, hogy egy 13B-s open-source modell finetune-nal is el\'e9g kreat\'edv, csak a nyelvezet\'e9n kell ut\'f3lag csiszolni. Ezek a d\'f6nt\'e9sek mind a fejleszt\'e9si folyamat sor\'e1n, k\'eds\'e9rletez\'e9ssel hozhat\'f3k meg. Arra is figyelni kell, hogy a t\'f6bb agent ne n\'f6velje meg t\'fals\'e1gosan a v\'e1laszid\f1\'f5t: ha minden fejezethez \f0\'f6tsz\'f6r fordul egym\'e1sh\'e1za a planner, narrator, editor, akkor a user percekig v\'e1rhat egy fejezet elk\'e9sz\'fclt\'e9re, ami UX szempontb\'f3l nem j\'f3. Teh\'e1t lehet, hogy kompromisszumk\'e9nt egy-k\'e9t j\'f3l megv\'e1lasztott modell fog v\'e9g\'fcl futni, nem egy tucat. \par
\par
Interaktivit\'e1s \'e9s testreszab\'e1s (felhaszn\'e1l\'f3i be\'e1ll\'edt\'e1sok a t\'f6rt\'e9net gener\'e1l\'e1s\'e1hoz) \par
\par
Mivel az alkalmaz\'e1s c\'e9lja, hogy a felhaszn\'e1l\'f3 \'e1ltal be\'e1ll\'edtott kezdeti param\'e9terekb\f1\'f5l gener\f0\'e1ljon t\'f6rt\'e9netet, kiemelten fontos a rendszer interaktivit\'e1sa \'e9s a gener\'e1l\'e1s testreszabhat\'f3s\'e1ga. A usernek bizonyos m\'e9rt\'e9kig ir\'e1ny\'edt\'e1st kell adni a t\'f6rt\'e9net felett \f2\endash  legal\f0\'e1bb az indul\'f3 felt\'e9teleket illet\f1\'f5en, de ak\f0\'e1r menet k\'f6zben is. Vizsg\'e1ljuk meg, hogyan tehetj\'fck a gener\'e1l\'e1st rugalmasan alak\'edthat\'f3v\'e1 a felhaszn\'e1l\'f3 ig\'e9nyei szerint: \par
\par
Kezd\f1\'f5 be\f0\'e1ll\'edt\'e1sok (vil\'e1g, m\f1\'fbfaj, karakterek): Az alkalmaz\f0\'e1snak engednie kell, hogy a felhaszn\'e1l\'f3 meghat\'e1rozza az alapvet\f1\'f5 param\f0\'e9tereket. Ide tartozik a m\f1\'fbfaj (pl. fantasy, sci-fi, krimi, romantikus, horror stb.), a st\f0\'edlus vagy hangnem (komor, humoros, epikus, modern nyelvezet\f1\'fb, r\f0\'e9gies stb.), a helysz\'edn \'e9s vil\'e1g (k\'f6z\'e9pkori kir\'e1lys\'e1g, t\'e1voli j\'f6v\f1\'f5, val\f0\'f3s mai k\'f6rnyezet, k\'e9pzeletbeli v\'e1ros stb.), valamint a f\f1\'f5bb szerepl\'f5k (pl. \ldblquote Egy tolvaj \f0\'e9s egy var\'e1zsl\'f3 a f\f1\'f5h\'f5s\f0\'f6k\rdblquote , vagy karakternevek megad\'e1sa \'e9s r\'f6vid le\'edr\'e1suk). Ezeket a bemeneteket azt\'e1n a gener\'e1l\'f3 AI sz\'e1m\'e1ra megfelel\f1\'f5 form\f0\'e1ba kell \'f6nteni. P\'e9ld\'e1ul \'f6ssze\'e1ll\'edthatunk egy promptot a rendszer sz\'e1m\'e1ra a k\'f6vetkez\f1\'f5 m\f0\'f3don: \ldblquote M\f1\'fbfaj: romantikus dr\f0\'e1ma; St\'edlus: k\'f6nnyed, humoros hangv\'e9tel; Helysz\'edn: egy kis tengerparti v\'e1ros; F\f1\'f5szerepl\'f5k: Anna, egy z\f0\'e1rk\'f3zott k\'f6nyvt\'e1rosn\f1\'f5 titkos m\f0\'falttal, \'e9s Ben, egy laza sz\'f6rfoktat\'f3, aki f\'e9l elk\'f6telez\f1\'f5dni.\rdblquote  Ezzel a modell m\f0\'e1r rendelkezik egy indul\'f3 kerettel, amihez igaz\'edthatja a t\'f6rt\'e9netet. Az AI nagy el\f1\'f5nye, hogy alkalmazkod\f0\'f3: ak\'e1r teljesen elt\'e9r\f1\'f5 zs\f0\'e1nereket \'e9s t\'e9m\'e1kat is tud kezelni, ha j\'f3l adja meg neki az ember a param\'e9tereket. P\'e9ld\'e1ul ugyanaz a rendszer tud az \f1\'fbrben j\f0\'e1tsz\'f3d\'f3 kalandot \'e9s 19. sz\'e1zadi koszt\'fcm\'f6s reg\'e9nyt is \'edrni, csak a bemeneteken m\'falik \f2\endash  a j\f0\'f3 AI story generator sokf\'e9le m\f1\'fbfajban \f0\'e9s st\'edlusban otthonosan mozog (AI Story Generator: A New Era of Storytelling). Ezt az alkalmaz\'e1s UI szintj\'e9n val\'f3s\'edthatjuk meg leg\'f6rd\'fcl\f1\'f5 list\f0\'e1kkal (m\f1\'fbfajv\f0\'e1laszt\'e1s), sz\'f6vegdobozokkal (saj\'e1t karakter le\'edr\'e1s bevitele), esetleg el\f1\'f5re defini\f0\'e1lt sablonokkal is (\ldblquote\'cdrj Sherlock Holmes-szer\f1\'fb detekt\f0\'edvt\'f6rt\'e9netet\rdblquote  gomb, ami kit\'f6lt p\'e1r param\'e9tert). \par
\par
Hossz \'e9s strukt\'fara testreszab\'e1sa: A felhaszn\'e1l\'f3nak lehetnek preferenci\'e1i a t\'f6rt\'e9net hossz\'e1t illet\f1\'f5en is. J\f0\'f3, ha be\'e1ll\'edthat\'f3 a c\'e9l terjedelem vagy fejezetek sz\'e1ma. P\'e9ld\'e1ul \ldblquote r\'f6vid novella (~1000 sz\'f3)\rdblquote , \ldblquote k\'f6zepes (~5000 sz\'f3, 5 fejezet)\rdblquote , \ldblquote hosszabb (~15000 sz\'f3, 10 fejezet)\rdblquote  opci\'f3k. Ezt a promptban vagy a gener\'e1l\'e1si logik\'e1ban \'fagy \'e9rv\'e9nyes\'edthetj\'fck, hogy pl. a v\'e1zlatk\'e9sz\'edt\'e9sn\'e9l ennyi fejezetet gener\'e1l, vagy a modellnek mondjuk: \ldblquote A t\'f6rt\'e9net kb. 5 fejezetb\f1\'f5l \f0\'e1lljon.\rdblquote  Persze a sz\'f6veghossz nehezen kontroll\'e1lhat\'f3 nagyon prec\'edzen AI-jal, de legal\'e1bb egy ir\'e1nymutat\'e1st ad. A szerkezeti elemek is testreszabhat\'f3k: lehet, hogy a user nem akar alfejezeteket, csak sim\'e1n fejezeteket; vagy \'e9pp ellenkez\f1\'f5leg, szereti, ha m\f0\'e9g kisebb szakaszokra bomlik a sz\'f6veg (pl. napl\'f3szer\f1\'fb bejegyz\f0\'e9sek). Ezeket az ig\'e9nyeket figyelembe vehetj\'fck param\'e9terk\'e9nt. Az interaktivit\'e1s azt is jelentheti, hogy a user kiv\'e1laszthat bizonyos elemeket a gener\'e1lt v\'e1zlatb\'f3l, miel\f1\'f5tt a teljes sz\f0\'f6veg elk\'e9sz\'fcl. P\'e9ld\'e1ul az app el\f1\'f5sz\f0\'f6r legener\'e1l 3-4 lehets\'e9ges cselekm\'e9ny-\'f6tletet a megadott param\'e9terek alapj\'e1n, \'e9s a felhaszn\'e1l\'f3 kiv\'e1lasztja, melyik tetszik neki legjobban (mint egyfajta \ldblquote pitch\rdblquote ). Csak ezut\'e1n kezd\'fcnk bele a teljes t\'f6rt\'e9net meg\'edr\'e1s\'e1ba. Ez n\'f6veli a user kontroll\'e9rzet\'e9t \'e9s az el\'e9gedetts\'e9get. \par
\par
Interakci\'f3 a gener\'e1l\'e1s sor\'e1n: Nem musz\'e1j a felhaszn\'e1l\'f3i interakci\'f3t a folyamat elej\'e9re korl\'e1tozni. Az alkalmaz\'e1s tervezhet\f1\'f5 \f0\'fagy is, hogy a t\'f6rt\'e9net gener\'e1l\'e1sa l\'e9p\'e9senk\'e9nt, a felhaszn\'e1l\'f3 bevon\'e1s\'e1val t\'f6rt\'e9njen. P\'e9ld\'e1ul fejezetenk\'e9nt haladunk: a rendszer legener\'e1lja az 1. fejezetet, a felhaszn\'e1l\'f3 elolvassa, majd d\'f6nthet, hogy megy tov\'e1bb a 2. fejezet (\'e9s esetleg ad egy-k\'e9t instrukci\'f3t: pl. \ldblquote a k\'f6vetkez\f1\'f5 fejezetben legyen valami konfliktus Anna \f0\'e9s Ben k\'f6z\'f6tt\rdblquote ). \'cdgy az AI dinamikusan igazodik a user visszajelz\'e9s\'e9hez. Ilyen mechanizmus megval\'f3sult m\'e1r pl. az AI Dungeon j\'e1t\'e9kban: ott a felhaszn\'e1l\'f3 b\'e1rmikor bevihet parancsokat, amelyek m\'f3dos\'edtj\'e1k a t\'f6rt\'e9net alakul\'e1s\'e1t, \'e9s az AI arra reag\'e1lva folytatja (untitled). A mi eset\'fcnkben is engedhet\'fcnk bizonyos m\'e9rt\'e9k\f1\'fb choose-your-own-adventure \f0\'e9lm\'e9nyt: pl. kritikus pontokon feltesz\'fcnk egy k\'e9rd\'e9st: \ldblquote Mit tegyen a h\f1\'f5s? (A) Elfogadja az aj\f0\'e1nlatot; (B) Visszautas\'edtja; (C) Elhalasztja a d\'f6nt\'e9st.\rdblquote  \f2\endash  \f0\'e9s a user v\'e1laszt\'e1sa szerint m\'e1sk\'e9pp gener\'e1ljuk a k\'f6vetkez\f1\'f5 fejezetet. Ez persze l\f0\'e9nyeg\'e9ben a t\'f6rt\'e9net el\'e1gaz\'e1s\'e1hoz vezet, ami bonyol\'edtja a rendszert, de n\'f6veli az interaktivit\'e1st. Alternat\'edv, egyszer\f1\'fbbb interakt\f0\'edv megold\'e1s a regener\'e1l\'e1s gomb bizonyos szinteken: ha a user nem el\'e9gedett egy bekezd\'e9ssel vagy fejezettel, k\'e9rheti \'fajragener\'e1l\'e1s\'e1t (ak\'e1r \'fagy is, hogy el\f1\'f5tte ad egy tippet, pl. \ldblquote legyen kevesebb le\f0\'edr\'e1s, t\'f6bb p\'e1rbesz\'e9d\rdblquote ). Fontos, hogy az UI ezeket a lehet\f1\'f5s\f0\'e9geket \'e1tl\'e1that\'f3an \'e9s k\'f6nnyen k\'edn\'e1lja, k\'fcl\'f6nben a felhaszn\'e1l\'f3 \'f6sszezavarodik, mennyire sz\'f3lhat bele. \par
\par
St\'edlus \'e9s egy\'e9b finomhangol\'e1s: A testreszab\'e1s nem csak a nagy vonalakra, hanem a megval\'f3s\'edt\'e1s m\'f3dj\'e1ra is kiterjedhet. P\'e9ld\'e1ul adhatunk lehet\f1\'f5s\f0\'e9get arra, hogy a felhaszn\'e1l\'f3 v\'e1lasszon \'edr\'f3i st\'edlust vagy hangv\'e9telt. Ak\'e1r ismert \'edr\'f3k st\'edlus\'e1nak ut\'e1nz\'e1s\'e1t is k\'e9rheti (\ldblquote\'cdrd meg a t\'f6rt\'e9netet Stephen King st\'edlus\'e1ban\rdblquote  \f2\endash  persze a modell k\f0\'e9pess\'e9gein bel\'fcl). Vagy meghat\'e1rozhatja, hogy E/1 vagy E/3 szem\'e9lyben menjen a narr\'e1ci\'f3, jelen id\f1\'f5ben vagy m\f0\'falt id\f1\'f5ben mes\f0\'e9ljen az AI. Ezek mind olyan r\'e9szletek, amiket egy mondattal bele lehet tenni a promptba \'e9s a modell nagy val\'f3sz\'edn\f1\'fbs\f0\'e9ggel tartani fogja mag\'e1t hozz\'e1. A l\'e9nyeg, hogy a user fel\'e9 \'e9rthet\f1\'f5en prezent\f0\'e1ljuk a lehet\f1\'f5s\f0\'e9geket. P\'e9ld\'e1ul egy \ldblquote Halad\'f3 be\'e1ll\'edt\'e1sok\rdblquote  panelben kipip\'e1lhatja: \ldblquote E/1 narr\'e1tor\rdblquote  vagy \ldblquote c\'edmet ad minden fejezetnek\rdblquote  stb. A testreszab\'e1s annyira mehet r\'e9szletekbe, amennyire csak akarjuk \f2\endash  de \f0\'fcgyelni kell r\'e1, hogy ne terhelj\'fck t\'fal a felhaszn\'e1l\'f3t t\'fal sok d\'f6nt\'e9si ponttal. \'c9rdemes az alapbe\'e1ll\'edt\'e1sokat j\'f3l bel\f1\'f5ni, hogy aki nem akar bajl\f0\'f3dni vele, annak is \'e9lvezetes t\'f6rt\'e9net k\'e9sz\'fclj\'f6n, de a halad\'f3 felhaszn\'e1l\'f3k ki\'e9lhess\'e9k kreat\'edv \'f6tleteiket a param\'e9terek \'e1ll\'edtgat\'e1s\'e1val. \par
\par
Kih\'edv\'e1sok az interaktivit\'e1sban: A f\f1\'f5 neh\f0\'e9zs\'e9g, hogy a felhaszn\'e1l\'f3i beavatkoz\'e1sok ne ronts\'e1k el a t\'f6rt\'e9net koherenci\'e1j\'e1t. Ha valaki menet k\'f6zben hirtelen teljesen \'faj ir\'e1nyt szab (pl. \ldblquote mostant\'f3l legyen sci-fi ez a sztori, eddig realista volt\rdblquote ), az az AI-t is megzavarhatja, vagy egyszer\f1\'fben rossz v\f0\'e9geredm\'e9nyhez vezet. Ki kell tal\'e1lni, milyen m\'e9rt\'e9kig engedj\'fck a m\'f3dos\'edt\'e1st: lehet p\'e9ld\'e1ul figyelmeztetni a usert: \ldblquote Ezzel a v\'e1ltoztat\'e1ssal a t\'f6rt\'e9net n\'e9h\'e1ny r\'e9szlete ellentmond\'e1sba ker\'fclhet. Biztos folytatod?\rdblquote  Egy m\'e1sik kih\'edv\'e1s a param\'e9terek hat\'e1s\'e1nak kommunik\'e1l\'e1sa. A user elv\'e1rja, hogy ha be\'e1ll\'edtott valamit, az t\'e9nyleg megjelenjen a sztoriban. Teh\'e1t ha megadott egy mell\'e9kszerepl\f1\'f5t n\f0\'e9v szerint, akkor k\'e9s\f1\'f5bb ne feledkezz\f0\'fcnk meg r\'f3la, mert a user csal\'f3dott lesz (\ldblquote Hov\'e1 t\f1\'fbnt az a karakter, akit a legelej\f0\'e9n eml\'edtettem?\rdblquote ). Ezt a probl\'e9m\'e1t \'fagy oldhatjuk meg, hogy a backend oldalon nyomon k\'f6vetj\'fck a felhaszn\'e1l\'f3 inputjait, \'e9s k\'e9nyszer\'edtj\'fck a modellt, hogy be\'e9p\'edtse \f1\'f5ket. P\f0\'e9ld\'e1ul a promptban mindig bent hagyjuk a user \'e1ltal defini\'e1lt elemek list\'e1j\'e1t (\ldblquote Szerepl\f1\'f5k: ...; Helysz\f0\'edn: ...; Hangulat: ...\rdblquote ), \'edgy nem vesznek el. Szint\'e9n kih\'edv\'e1s a UI/UX egyszer\f1\'fbs\f0\'e9ge: sok param\'e9ter = bonyolult kezel\f1\'f5fel\f0\'fclet. Ezt ellens\'falyozhatjuk el\f1\'f5re \f0\'f6ssze\'e1ll\'edtott profilokkal vagy p\'e9ld\'e1kkal. Mondjuk lehet v\'e1lasztani el\f1\'f5re: \ldblquote Mes\f0\'e9s fant\'e1zia\rdblquote  \f2\endash  \f0\'e9s ez bel\f1\'f5 a m\'fbfajt fantasyra, hangv\f0\'e9telt mes\'e9sre, happy endet a v\'e9g\'e9re stb., an\'e9lk\'fcl hogy mindent k\'fcl\'f6n-k\'fcl\'f6n be\'e1ll\'edtana a user. \par
\par
Megold\'e1sok \'e9s tippek: A legjobb, ha az alkalmaz\'e1s r\'e9tegesen biztos\'edtja a testreszab\'e1st. Alap\'e9rtelmez\'e9sben csak a legfontosabb dolgokat k\'e9rdezi meg (m\f1\'fbfaj, t\f0\'e9ma, p\'e1r f\f1\'f5szerepl\'f5), halad\f0\'f3 m\'f3dba kapcsolva viszont el\f1\'f5j\f0\'f6nnek extra opci\'f3k. \'cdgy mindenki a saj\'e1t komfortz\'f3n\'e1j\'e1ban maradhat. Az interakci\'f3 sor\'e1n lehet alkalmazni a \ldblquote human-in-the-loop\rdblquote  paradigm\'e1t: a felhaszn\'e1l\'f3 akt\'edvan r\'e9szt vesz, ezzel n\'f6velve az el\'e9gedetts\'e9g\'e9t, \'e9s k\'f6zben seg\'edt is az AI-nak jobb d\'f6nt\'e9seket hozni. P\'e9ld\'e1ul ha a felhaszn\'e1l\'f3 jelzi, hogy nem tetszik neki egy adott fejlem\'e9ny, az egyfajta hiba-visszajelz\'e9s az AI fel\'e9, amit figyelembe vehet (ak\'e1r \'fagy is, hogy a backend a user visszajelz\'e9st prompt engineeringgel beviszi: \ldblquote A felhaszn\'e1l\'f3 nem el\'e9gedett ezzel a fordulattal, adj alternat\'edv\'e1t.\rdblquote ). A testreszabhat\'f3s\'e1g n\'f6veli a rendszer komplexit\'e1s\'e1t, de j\'f3l tervezett vezet\f1\'f5 sz\f0\'f6vegekkel \'e9s s\'fag\'f3kkal seg\'edthetj\'fck a usert. P\'e9ld\'e1ul egy kis tooltip elmagyar\'e1zhatja, hogy \ldblquote A m\f1\'fbfaj meghat\f0\'e1rozza a t\'f6rt\'e9net st\'edlus\'e1t \'e9s tipikus cselekm\'e9nyelemeit. Ha bizonytalan vagy, v\'e1laszd a \lquote Kaland\rquote , ez egy \'e1ltal\'e1nos kateg\'f3ria tele akci\'f3val \'e9s rejt\'e9llyel.\rdblquote  V\'e9gezet\'fcl, fontos, hogy legyen egy alap\'e9rtelmezett viselked\'e9s, ami minden k\'fcl\'f6n be\'e1ll\'edt\'e1s n\'e9lk\'fcl is \'e9rtelmes t\'f6rt\'e9netet eredm\'e9nyez \f2\endash  mert sok felhaszn\f0\'e1l\'f3 csak megnyomja a \ldblquote Gener\'e1l\'e1s\rdblquote  gombot an\'e9lk\'fcl, hogy b\'e1rmit finomhangolna. \par
\par
Technol\'f3giai implement\'e1ci\'f3 (adatstrukt\'far\'e1k, API-k, fejleszt\f1\'f5i eszk\f0\'f6z\'f6k) \par
\par
Ebben a szakaszban \'e1ttekintj\'fck, milyen konkr\'e9t technol\'f3giai megold\'e1sok seg\'edthetnek egy hat\'e9kony AI t\'f6rt\'e9netgener\'e1l\'f3 alkalmaz\'e1s megval\'f3s\'edt\'e1s\'e1ban. Ide tartozik az adatok \'e9s a t\'f6rt\'e9net reprezent\'e1ci\'f3ja, a k\'fcls\f1\'f5 API-k haszn\f0\'e1lata, a fejleszt\f1\'f5i k\f0\'f6nyvt\'e1rak, \'e9s \'e1ltal\'e1ban a szoftverarchitekt\'fara k\'e9rd\'e9sei. \par
\par
A t\'f6rt\'e9net reprezent\'e1ci\'f3ja (adatstrukt\'far\'e1k): B\'e1r a t\'f6rt\'e9net maga sz\'f6veg, a h\'e1tt\'e9rben \'e9rdemes lehet struktur\'e1lt form\'e1ban is t\'e1rolni az inform\'e1ci\'f3kat. K\'e9t f\f1\'f5 dolog van: a narrat\f0\'edva strukt\'far\'e1ja \'e9s a vil\'e1gbeli t\'e9nyek. A narrat\'edva strukt\'far\'e1j\'e1hoz k\'e9sz\'edthet\'fcnk egy olyan adatmodellt, ami tartalmazza a Story objektumot, benne Chapters list\'e1j\'e1t, azon bel\'fcl mondjuk Scenes vagy Paragraphs list\'e1j\'e1t. Minden ilyen egys\'e9ghez metaadatokat f\f1\'fbzhet\f0\'fcnk: pl. mely szerepl\f1\'f5k szerepelnek benne, mi a c\f0\'e9lja annak a jelenetnek a plot szempontj\'e1b\'f3l, van-e fordul\'f3pont, milyen hangulat\'fa stb. Ezeket az adatokat felhaszn\'e1lhatjuk a gener\'e1l\'e1s sor\'e1n (pl. amikor a 5. fejezetet gener\'e1ljuk, megn\'e9zz\'fck a data structure-ben, hogy a 5. fejezet \ldblquote climax\rdblquote  t\'edpus\'fa-e \'e9s kik a jelenlev\f1\'f5 szerepl\'f5k, \f0\'e9s ennek megfelel\f1\'f5 promptot \f0\'e1ll\'edtunk \'f6ssze). A vil\'e1gbeli t\'e9nyekhez haszn\'e1lhatunk egyszer\f1\'fb t\f0\'e1rol\'f3 strukt\'far\'e1kat vagy tud\'e1sgr\'e1fot: pl. egy Character adatszerkezet mindenkir\f1\'f5l, Location adatszerkezet helysz\f0\'ednekr\f1\'f5l, \f0\'e9s ezek k\'f6z\'f6tt kapcsolatok (XY karakter Z helysz\'ednen tart\'f3zkodik; X ismeri Y-t; stb.). Ez l\'e9nyeg\'e9ben egy mini tud\'e1sb\'e1zis a t\'f6rt\'e9net \ldblquote univerzum\'e1r\'f3l\rdblquote . Min\'e9l r\'e9szletesebb, ann\'e1l jobban seg\'edthet\'fcnk vele az AI-nak, hogy k\'f6vetkezetes maradjon. A gener\'e1l\'e1s sor\'e1n ennek a tud\'e1sb\'e1zisnak a relev\'e1ns szelet\'e9t mindig \'f6sszef\f1\'fbzhetj\f0\'fck a prompttal (p\'e9ld\'e1ul \ldblquote World State: [itt felsoroljuk amit tudni kell]\rdblquote ). Az adatszerkezetek megv\'e1laszt\'e1s\'e1n\'e1l a egyszer\f1\'fbs\f0\'e9gre kell t\'f6rekedni: lehet, hogy egy sima Python sz\'f3t\'e1r t\'f6k\'e9letesen megfelel a vil\'e1gle\'edr\'e1snak, nem kell t\'fal bonyolultat gondolni. A l\'e9nyeg, hogy k\'f6nnyen friss\'edthet\f1\'f5 legyen (amikor a t\f0\'f6rt\'e9net gener\'e1l\'e1s k\'f6zben kider\'fcl valami \'faj t\'e9ny, friss\'edteni tudjuk benne). \par
\par
API-k a modell el\'e9r\'e9s\'e9hez: Ha felh\f1\'f5ben el\f0\'e9rhet\f1\'f5 modell(ek)et haszn\f0\'e1lunk (OpenAI, Anthropic, stb.), akkor integr\'e1lni kell a megfelel\f1\'f5 REST/HTTP API-kat vagy kliensk\f0\'f6nyvt\'e1rakat. Az OpenAI-hoz p\'e9ld\'e1ul van j\'f3l haszn\'e1lhat\'f3 Python library (openai), amivel egyszer\f1\'fben lehet h\f0\'edvni a modellt. Hasonl\'f3an az Anthropichoz is l\'e9tezik SDK. Fontos a k\'f6rnyezet konfigur\'e1l\'e1sa: az API kulcsokat biztons\'e1gosan kezelj\'fck, a h\'edv\'e1sokat aszinkronban kezelj\'fck-e vagy szinkronban (pl. egy webalkalmaz\'e1sn\'e1l \'e9rdemes aszinkron, hogy ne blokkolja a szervert a v\'e1rakoz\'e1s). Ha local modellt futtatunk, akkor olyan library-k j\'f6nnek sz\'f3ba, mint a Hugging Face Transformers (amivel Pythonban futtathatjuk a nyelvi modelleket, GPU t\'e1mogat\'e1ssal), vagy specifikus megold\'e1sok LLaMA-hoz (pl. llama.cpp C++ k\'f6nyvt\'e1r, ami CPU-n is futtatja a modell kisebb v\'e1ltozatait). A v\'e1lasztott technol\'f3gia stack f\'fcgg att\'f3l is, milyen platformra k\'e9sz\'fcl az app: ha mobilra, akkor a felh\f1\'f5 h\f0\'edv\'e1s praktikusabb a neh\'e9z sz\'e1m\'edt\'e1s miatt; ha webre, szint\'e9n; ha PC-s alkalmaz\'e1s offline, akkor bundlizni kell a modellt (ami neh\'e9z lehet, mert sok GB). Ezeket a d\'f6nt\'e9seket a fejleszt\'e9s elej\'e9n \'e9rdemes meghozni. A gener\'e1l\'e1s l\'e9p\'e9seit mind API h\'edv\'e1sok form\'e1j\'e1ban kell megval\'f3s\'edtani: pl. egy generate_outline(parameters) f\'fcggv\'e9ny megh\'edv egy AI modellt, ami visszaad egy v\'e1zlatot JSON form\'e1ban (ha \'fagy k\'e9rt\'fck meg), azt\'e1n egy generate_chapter(chapter_outline, world_state) a k\'f6vetkez\f1\'f5 l\f0\'e9p\'e9sben egy m\'e1sik h\'edv\'e1s. Itt j\'f6n k\'e9pbe, hogy milyen form\'e1tumban kommunik\'e1ljunk az AI-val: a nyelvi modellek alapvet\f1\'f5en sz\f0\'f6veget inputk\'e9nt \'e9s outputk\'e9nt v\'e1rnak, de megtan\'edthat\'f3k struktur\'e1lt form\'e1tumokra is. Pl. k\'e9rhetj\'fck, hogy JSON-ben adja vissza a v\'e1zlatot (fejezetc\'edmek list\'e1ja), \'e9s a modell ezt t\'f6bbnyire teljes\'edti is. Ez megk\'f6nny\'edti a feldolgoz\'e1st. Ugyanakkor n\'e9ha megb\'edzhat\'f3bb, ha mindent sz\'f6vegesen kezel\'fcnk, \'e9s a mi k\'f3dunk parse-olja ki bel\f1\'f5le, amire sz\f0\'fcks\'e9g van \f2\endash  mert el\f1\'f5fordul, hogy a modell hallucin\f0\'e1l egy kicsit \'e9s nem teljesen szabv\'e1nyos JSON-t ad. Ezt figyelembe kell venni (pl. robust error handling: ha JSON parse fail, pr\'f3b\'e1ljuk meg \'fajra m\'e1sik m\'f3dszerrel). \par
\par
Fejleszt\f1\'f5i eszk\f0\'f6z\'f6k \'e9s workflow: A fejleszt\'e9s sor\'e1n j\'f3l j\'f6het n\'e9h\'e1ny kifejezetten az LLM-ekhez kialak\'edtott keretrendszer. Az egyik ilyen a LangChain, ami lehet\f1\'f5v\f0\'e9 teszi a promptok \'e9s l\'e1ncolt h\'edv\'e1sok k\'f6nnyebb kezel\'e9s\'e9t. P\'e9ld\'e1ul k\'e9sz\'edthet\'fcnk vele egy Chain-t, aminek els\f1\'f5 l\f0\'e1ncszeme az outline gener\'e1l\'e1s (egy meghat\'e1rozott prompttal \'e9s modellh\'edv\'e1ssal), ut\'e1na az eredm\'e9nyt felhaszn\'e1lva a m\'e1sodik l\'e1ncszem h\'edvja a modellt a fejezet sz\'f6veg gener\'e1l\'e1s\'e1ra, stb. A LangChain \'e9s hasonl\'f3 keretrendszerek abban is seg\'edtenek, hogy mem\'f3ri\'e1t kezeljenek a besz\'e9lget\'e9sben (b\'e1r n\'e1lunk nem annyira chat a feladat, de a kontextus menedzsel\'e9s hasonl\'f3). Tov\'e1bb\'e1 integr\'e1lt eszk\'f6z\'f6ket k\'edn\'e1lnak pl. a n\'e9v entit\'e1s felismer\'e9shez, dokumentumok t\'e1rol\'e1s\'e1hoz, amiket kreat\'edvan felhaszn\'e1lhatunk. A fejleszt\'e9s kezdeti f\'e1zis\'e1ban val\'f3sz\'edn\f1\'fbleg sokat fogunk iter\f0\'e1lni a promptokon \f2\endash  erre j\f0\'f3 strat\'e9gia, ha k\'e9sz\'edt\'fcnk egy kis szkriptet vagy Jupyter notebookot, amiben gyorsan ki tudjuk pr\'f3b\'e1lni, mit ad a modell egy adott utas\'edt\'e1sra. A prompt engineering val\'f3sz\'edn\f1\'fbleg a folyamat jelent\'f5s r\f0\'e9sz\'e9t kiteszi, hiszen a megfelel\f1\'f5 k\f0\'e9r\'e9smegsz\'f6vegez\'e9se az AI fel\'e9 kulcs a j\'f3 outputhoz. Ehhez hasznos lehet verzi\'f3k\'f6vetni a prompt sablonokat \'e9s p\'e9ld\'e1kat, \'e9s jegyzetelni, melyik verzi\'f3 milyen eredm\'e9nyt hozott. \par
\par
Teljes\'edtm\'e9ny \'e9s k\'f6lts\'e9g: Technikai implement\'e1ci\'f3 sor\'e1n figyelni kell a hat\'e9konys\'e1gra. Egy AI t\'f6rt\'e9net\'edr\'f3 alkalmaz\'e1s potenci\'e1lisan sok sz\'e1m\'edt\'e1st v\'e9gez, pl\'e1ne ha hossz\'fa tartalmakat gener\'e1l. Ha felh\f1\'f5 API-t haszn\f0\'e1lunk, akkor optimaliz\'e1lni kell a h\'edv\'e1sok sz\'e1m\'e1t \'e9s hossz\'e1t, mert minden token p\'e9nz. Hasznos tr\'fckk lehet a r\'e9szleges gener\'e1l\'e1s caching. P\'e9ld\'e1ul ha ugyanazt a fejezetet egyszer m\'e1r legener\'e1ltuk \'e9s a user nem v\'e1ltoztatott az el\f1\'f5zm\f0\'e9nyeken, ne gener\'e1ltassuk le \'fajb\'f3l (hacsak nem k\'e9ri \'fajra); vagy a v\'e1zlatgener\'e1l\'e1st csak egyszer v\'e9gezz\'fck el \'e9s t\'e1roljuk, ne minden apr\'f3 m\'f3dos\'edt\'e1sn\'e1l. Ehhez persze kell egy logika, ami felismeri, mi v\'e1ltozott a user inputban ami indokolja az \'fajragener\'e1l\'e1st. Helyben fut\'f3 modellekn\'e9l a mem\'f3ria \'e9s sebess\'e9g a sz\f1\'fbk keresztmetszet: lehet, hogy csak CPU van, vagy ha van is GPU, nem f\f0\'e9r el rajta a 70B modell. Ilyenkor j\'f6het sz\'f3ba modellpruning vagy quantization (modell t\'f6m\'f6r\'edt\'e9se pl. 4-bit quantizationnel), illetve streamel\'e9s (hossz\'fa kimenetet ne egyszerre gener\'e1ltassuk, hanem folyamatosan, ha a fel\'fclet is tudja mutatni, akkor az user is l\'e1tja, hogy halad). A fejleszt\'e9s eszk\'f6zt\'e1ra teh\'e1t kieg\'e9sz\'fcl az ML ops oldal\'e1r\'f3l p\'e1r dologgal: pl. ha finomhangolunk egy modellt, kell hozz\'e1 GPU infrastrukt\'fara \'e9s ML k\'f6nyvt\'e1rak (PyTorch, Transformers). Ha nem, akkor is \'e9rdemes ismerni a benchmarkingot: mennyi id\f1\'f5 egy fejezet gener\f0\'e1l\'e1sa modell X-szel vs model Y-nal, \'e9s kell-e optimaliz\'e1lni. \par
\par
Integr\'e1ci\'f3 \'e9s architekt\'fara: Mag\'e1t az alkalmaz\'e1st lehet webes (pl. egy frontend JS \'e9s backend Python), mobil (mobil app, ami h\'edv egy backendet), vagy asztali (egy telep\'edthet\f1\'f5 program) form\f0\'e1ban fejleszteni. A technol\'f3giai d\'f6nt\'e9sekn\'e9l ezt is figyelembe kell venni. Egy webes megold\'e1sn\'e1l pl. a backend lehet Flask/FastAPI alap\'fa Python szerver, ami h\'edvogatja az AI modelleket \'e9s HTTP-n k\'fcldi vissza az eredm\'e9nyt a frontendnek. A frontend pedig JavaScript/TypeScript (tal\'e1n egy React alap\'fa UI), amin bel\'fcl sz\'e9pen form\'e1zva jelennek meg a fejezetek, \'e9s be lehet vinni a param\'e9tereket. Fontos a felhaszn\'e1l\'f3i adatok kezel\'e9se is: pl. be kell-e jelentkezni, elmentj\'fck-e a gener\'e1lt t\'f6rt\'e9neteket? Ha igen, akkor adatb\'e1zisra is sz\'fcks\'e9g lehet a t\'e1rol\'e1shoz (pl. a v\'e9gleges t\'f6rt\'e9net PDF ment\'e9se vagy a nyers sz\'f6veg elt\'e1rol\'e1sa, hogy k\'e9s\f1\'f5bb folytathass\f0\'e1k). A gener\'e1l\'e1s moduljait \'e9rdemes szolg\'e1ltat\'e1sk\'e9nt elk\'fcl\'f6n\'edteni: pl. k\'fcl\'f6n microservice a t\'f6rt\'e9netgener\'e1l\'f3 motor, \'e9s k\'fcl\'f6n a felhaszn\'e1l\'f3i fi\'f3k meg az UI. \'cdgy sk\'e1l\'e1zhat\'f3bb \'e9s a fejleszt\'e9s is p\'e1rhuzamos\'edthat\'f3. Persze egy protot\'edpusn\'e1l nem musz\'e1j r\'f6gt\'f6n microservice-ekkel ind\'edtani, de hosszabb t\'e1von gondolkodva praktikus lehet. \par
\par
Kih\'edv\'e1sok a megval\'f3s\'edt\'e1sban: Rengeteg apr\'f3 gyakorlati probl\'e9ma felmer\'fclhet. P\'e9ld\'e1ul a prompt m\'e9ret\'e9nek kezel\'e9se: ha sok mindent tesz\'fcnk a promptba (pl. vil\'e1gst\'e1tusz, m\'falt fejezet \'f6sszefoglal\'f3ja, user utas\'edt\'e1sai), k\'f6nnyen t\'fall\'e9phetj\'fck a token limitet. Ezt \'e9szre kell venni \'e9s megoldani (pl. r\'e9gebbi fejezeteket kivonatokra cser\'e9lni a mem\'f3ri\'e1ban). A hiba\'fczenetek \'e9s kiv\'e9telek kezel\'e9se is fontos: az AI API visszaadhat hib\'e1t (t\'falterhel\'e9s, tartalomszab\'e1ly megszeg\'e9se, form\'e1tum hiba). Ezeket le kell kezelni, felhaszn\'e1l\'f3t t\'e1j\'e9koztatni (pl. \ldblquote Ezt a k\'e9r\'e9st a modell nem tudta feldolgozni, pr\'f3b\'e1ld m\'e1shogy megfogalmazni.\rdblquote ). A fejleszt\f1\'f5i tesztel\f0\'e9shez ne felejts\'fck el, hogy a modellek kimenete nem determinisztikus (hacsak temperature=0 nem futtatjuk, de akkor meg nagyon merev lesz a sz\'f6veg). Teh\'e1t ugyanarra a k\'e9r\'e9sre t\'f6bbsz\'f6r kicsit elt\'e9r\f1\'f5 v\f0\'e1laszt adhat. Ez\'e9rt a tesztel\'e9sn\'e9l nem egzakt \'f6sszehasonl\'edt\'e1sokra kell gondolni, hanem tartalmi megfelel\'e9sre. Hasznos lehet unit teszt jelleggel n\'e9h\'e1ny \ldblquote mag\rdblquote  funkci\'f3t fix random seeddel futtatni, de a kreat\'edv sz\'f6vegkimenetet ink\'e1bb min\f1\'f5s\f0\'e9gi tesztekkel (pl. egy ember elolvassa \'e9s \'e9rt\'e9keli) \'e9rdemes vizsg\'e1lni. \par
\par
Eszk\'f6zjavaslatok \'f6sszefoglalva: \par
\par
Programoz\'e1si nyelvnek Python el\f1\'f5ny\f0\'f6s (h\'e1la a sok AI library-nek), backendnek FastAPI, frontendnek React vagy Vue. \par
\par
LLM integr\'e1ci\'f3hoz OpenAI/Anthropic SDK, vagy Transformers + saj\'e1t modell. \par
\par
Prompt l\'e1ncol\'e1shoz LangChain vagy saj\'e1t egyszer\f1\'fb oszt\f0\'e1lyok. \par
\par
Adatt\'e1rol\'e1shoz kezdetben el\'e9g lehet JSON f\'e1jl a sztoriknak, de sk\'e1l\'e1z\'e1sn\'e1l SQL/NoSQL db j\'f6het sz\'f3ba. \par
\par
Verzi\'f3kezel\'e9shez Git (f\f1\'f5leg a prompt design is menjen verzi\f0\'f3kontroll al\'e1, mert nagyon fontos r\'e9sze a \ldblquote k\'f3dnak\rdblquote ). \par
\par
Monitoring: loggolni a modell v\'e1laszokat (legal\'e1bb dev k\'f6rnyezetben), hogy k\'e9s\f1\'f5bb visszan\f0\'e9zhet\f1\'f5 legyen egy furcsa hiba eset\f0\'e9n, mi volt a prompt \'e9s r\'e1 a reakci\'f3. \par
\par
Felhaszn\'e1l\'f3i \'e9lm\'e9ny (\'e9rdekfesz\'edt\f1\'f5, k\f0\'f6vetkezetes \'e9s olvasm\'e1nyos t\'f6rt\'e9netek) \par
\par
V\'e9g\'fcl, de tal\'e1n a legfontosabb szempont: a gener\'e1lt novella milyen \'e9lm\'e9nyt ny\'fajt az olvas\'f3nak. Hi\'e1ba m\f1\'fbk\f0\'f6dik hib\'e1tlanul a technol\'f3gia, ha a kimenet \'e9rdektelen vagy sz\'e9tes\f1\'f5, a felhaszn\f0\'e1l\'f3 nem lesz el\'e9gedett. Az AI \'e1ltal \'edrt t\'f6rt\'e9netnek versenyk\'e9pesnek kell lennie egy ember \'e1ltal \'edrtal szemben legal\'e1bb annyira, hogy lek\'f6sse az olvas\'f3t. N\'e9zz\'fck, mire kell figyelni a j\'f3 felhaszn\'e1l\'f3i \'e9lm\'e9ny \'e9rdek\'e9ben: \par
\par
Koherencia \'e9s k\'f6vetkezetess\'e9g: Ahogy m\'e1r t\'f6bbsz\'f6r is hangs\'falyoztuk, a t\'f6rt\'e9netnek bels\f1\'f5 logik\f0\'e1val kell rendelkeznie. Az olvas\'f3 frusztr\'e1lt lesz, ha azt l\'e1tja, hogy a sztori \'f6sszevissza ugr\'e1l, vagy a karakterek motiv\'e1latlanul cselekszenek. A k\'f6vetkezetes cselekm\'e9ny, karakterek \'e9s st\'edlus alapfelt\'e9tel (Automatic Story Generation: Challenges and Attempts). A felhaszn\'e1l\'f3i \'e9lm\'e9ny jav\'edt\'e1sa \'e9rdek\'e9ben implement\'e1lhatunk egyfajta min\f1\'f5s\f0\'e9gbiztos\'edt\'e1st a gener\'e1l\'e1s ut\'e1n: pl. a rendszer a h\'e1tt\'e9rben ellen\f1\'f5rzi, hogy nincsenek-e nyilv\f0\'e1nval\'f3 ellentmond\'e1sok. Ha tal\'e1l (mondjuk a karakter neve egyszer John, m\'e1shol James, holott ugyanaz), automatikusan jav\'edtja vagy megjel\'f6li a sz\'f6vegben. Az is j\'f3 megold\'e1s lehet, ha a k\'e9sz t\'f6rt\'e9netet szakaszonk\'e9nt \'f6sszefoglaljuk \'e9s azt k\'fcl\'f6n megn\'e9zz\'fck, hogy az \'f6sszefoglal\'f3k logikusan k\'f6vetik-e egym\'e1st \f2\endash  ezt ak\f0\'e1r egy m\'e1sodik AI-val elemeztethetj\'fck. B\'e1r ez m\'e1r nagyon kifinomult m\f1\'fbk\f0\'f6d\'e9s, egy pr\'e9mium felhaszn\'e1l\'f3i \'e9lm\'e9nyt ny\'fajt\'f3 appn\'e1l megfontoland\'f3. Fontos tov\'e1bb\'e1 a nyelvi k\'f6vetkezetess\'e9g: ne v\'e1ltogassa a narr\'e1tor a megsz\'f3l\'edt\'e1st, ne cser\'e9l\f1\'f5dj\f0\'f6n a perspekt\'edva (hacsak nem sz\'e1nd\'e9kos). Ezt a promptokban r\'f6gz\'edteni kell, de a v\'e9g\'e9n is fusson egy ellen\f1\'f5rz\f0\'e9s, mert hossz\'fa gener\'e1l\'e1sn\'e1l el\f1\'f5fordulhat cs\f0\'fasz\'e1s. \par
\par
Olvasm\'e1nyoss\'e1g \'e9s st\'edlus: Az AI \'e1ltal gener\'e1lt sz\'f6vegek n\'e9ha felismerhet\f1\'f5k onnan, hogy kiss\f0\'e9 g\'e9piess\'e9 vagy t\'fals\'e1gosan \'e1ltal\'e1noss\'e1 v\'e1lnak. Az olvas\'f3 \'e9lm\'e9nye akkor lesz j\'f3, ha a t\'f6rt\'e9net nyelvezete gazdag, v\'e1ltozatos, de k\'f6zben a m\f1\'fbfajhoz ill\'f5. \f0\'dcgyelni kell a bekezd\'e9stagol\'e1sra, p\'e1rbesz\'e9dek helyes form\'e1z\'e1s\'e1ra (id\'e9z\f1\'f5jelek, gondolatjelek haszn\f0\'e1lat\'e1ra a v\'e1lasztott nyelvi norm\'e1nak megfelel\f1\'f5en), mert ha ezek hi\f0\'e1nyosak, az olvas\'f3t zavarhatja. P\'e9ld\'e1ul egy t\'f6m\'f6r \ldblquote fal sz\'f6veg\rdblquote  elriaszt\'f3, m\'e9g akkor is, ha a tartalom j\'f3 \f2\endash  ez\f0\'e9rt \'e9rdemes a modellt instru\'e1lni, hogy haszn\'e1ljon bekezd\'e9seket, p\'e1rbesz\'e9d eset\'e9n k\'fcl\'f6n sorba t\'f6rdelje a megsz\'f3lal\'e1sokat stb. A felhaszn\'e1l\'f3i fel\'fcleten is sok m\'falik: c\'e9lszer\f1\'fb j\f0\'f3l olvashat\'f3 tipogr\'e1fi\'e1t v\'e1lasztani, megfelel\f1\'f5 bet\'fbm\f0\'e9rettel, \'e9s pl. fejezetc\'edmeket kiemelni. Ezek apr\'f3s\'e1gok, de hozz\'e1j\'e1rulnak ahhoz, hogy a user val\'f3ban egy e-k\'f6nyv olvas\'e1s\'e1nak \'e9lm\'e9ny\'e9t kapja, ne csak egy nyers AI outputot l\'e1sson. Tartalmi st\'edlus szempontb\'f3l figyelni kell a temp\'f3ra is: ha t\'fal lassan indul a sztori, az olvas\'f3 unatkozhat \'e9s abbahagyja. Ez ellen bevethet\'fcnk valamit, amit a kreat\'edv \'edr\'e1sban \ldblquote hook\rdblquote -nak h\'edvnak: m\'e1r az elej\'e9n egy \'e9rdekes jelenettel, k\'e9rd\'e9ssel vagy rejt\'e9llyel ind\'edtani, ami bevonzza az olvas\'f3t. Ezt bele lehet \'e9p\'edteni a gener\'e1l\'e1si instrukci\'f3kba (\ldblquote Kezdd a t\'f6rt\'e9netet egy figyelemfelkelt\f1\'f5 jelenettel vagy mondattal!\rdblquote ). \par
\par
\f0\'c9rdekfesz\'edt\f1\'f5 tartalom: Az AI gyakran \ldblquote biztons\f0\'e1gi j\'e1t\'e9kot\rdblquote  j\'e1tszik \'e9s klis\'e9s megold\'e1sokat halmozhat. A felhaszn\'e1l\'f3i \'e9lm\'e9nyt viszont az n\'f6veli, ha a t\'f6rt\'e9net tartalmaz eredeti \'f6tleteket, fordulatokat. Ezt serkenthetj\'fck \'fagy, hogy a modellt magasabb kreativit\'e1si be\'e1ll\'edt\'e1ssal futtatjuk (pl. temperature param\'e9tert 0.8-1.0 k\'f6r\'fclire tessz\'fck, nem alacsonyra). Viszont ez n\'f6veli a k\'f6vetkezetlens\'e9g kock\'e1zat\'e1t, teh\'e1t finoman kell balansz\'edrozni. Lehet ak\'e1r azt csin\'e1lni, hogy k\'e9t f\'e1zisban gener\'e1lunk: el\f1\'f5sz\f0\'f6r egy nyersebb, magas kreativit\'e1s\'fa verzi\'f3t, majd azt megpr\'f3b\'e1ljuk szerkesztetni a modellel alacsonyabb kreativit\'e1ssal (\ldblquote edit for coherence\rdblquote ). \'cdgy a v\'e9geredm\'e9ny rem\'e9lhet\f1\'f5leg meg\'f5rzi a j\f0\'f3 \'f6tleteket, de kisz\f1\'fbri a zagyvas\f0\'e1got. A t\'f6rt\'e9netbe \'e9rdemes konfliktusokat \'e9s megoldand\'f3 probl\'e9m\'e1kat tenni, mert ezek keltik fel az \'e9rdekl\f1\'f5d\f0\'e9st \f2\endash  erre figyelj\f0\'fcnk a v\'e1zlatk\'e9sz\'edt\'e9sn\'e9l. Ha azt l\'e1tjuk, hogy lapos a sztori (pl. mindenki boldog \'e9s semmi baj nincs \f2\endash  ami val\f0\'f3j\'e1ban unalmas), akkor ink\'e1bb gener\'e1ltassuk \'fajra a v\'e1zlatot vagy adjunk hozz\'e1 egy konfliktust. S\f1\'f5t, ak\f0\'e1r az UI is be\'e9p\'edthet egy ilyen opci\'f3t: \ldblquote Adj hozz\'e1 t\'f6bb konfliktust\rdblquote  gomb, ami ut\'f3lag m\'f3dos\'edtja a sztorit (pl. beilleszt valahova egy \'faj probl\'e9m\'e1t, amit meg kell oldani). Ezzel az olvas\'f3 is \'e9rezheti, hogy alak\'edthatja a t\'f6rt\'e9net izgalmi szintj\'e9t. \par
\par
Felhaszn\'e1l\'f3i visszajelz\'e9s \'e9s tanul\'e1s: A hossz\'fa t\'e1v\'fa j\'f3 \'e9lm\'e9ny biztos\'edt\'e1s\'e1hoz fontos a felhaszn\'e1l\'f3i visszajelz\'e9sek gy\f1\'fbjt\f0\'e9se. Az alkalmaz\'e1sban lehet opci\'f3 \'e9rt\'e9kelni a t\'f6rt\'e9netet, vagy jelezni, mennyire tetszett (pl. csillagokkal, vagy \ldblquote kedvenc jelenet\rdblquote  kijel\'f6l\'e9s\'e9vel). Ezeket az adatokat a fejleszt\f1\'f5k felhaszn\f0\'e1lhatj\'e1k az AI finomhangol\'e1s\'e1ra vagy a promptok m\'f3dos\'edt\'e1s\'e1ra. P\'e9ld\'e1ul ha az a trend rajzol\'f3dik ki, hogy a felhaszn\'e1l\'f3k szerint \ldblquote kicsit zavaros a t\'f6rt\'e9net k\'f6zepe fel\'e9\rdblquote , akkor tudjuk, hogy a dramaturgi\'e1n kell jav\'edtani, \'e9s be\'e9p\'edt\'fcnk valamilyen extra kontrollt k\'f6z\'e9pt\'e1jon. Az AI-t is lehet online tan\'edtani a visszajelz\'e9sek alapj\'e1n (reinforcement learning with human feedback jelleggel), b\'e1r ez az egyedi alkalmaz\'e1sfejleszt\'e9s keretein bel\'fcl el\'e9g komplex feladat. Egyszer\f1\'fbbb, ha mi \f0\'e9rtelmezz\'fck a visszajelz\'e9seket \'e9s manu\'e1lisan finom\'edtunk a rendszeren. \par
\par
Tartalomellen\f1\'f5rz\f0\'e9s \'e9s biztons\'e1g: A felhaszn\'e1l\'f3i \'e9lm\'e9nyhez az is hozz\'e1tartozik, hogy a gener\'e1lt sztori ne legyen s\'e9rt\f1\'f5 vagy nemk\f0\'edv\'e1natos. Mivel a user \'e1ltal gener\'e1lt tartalomr\'f3l van sz\'f3, n\'e9ha lehet, hogy extr\'e9m dolgokat k\'e9rnek (horror, erotika, stb.). Ki kell tal\'e1lni a tartalmi korl\'e1tokat: megengedj\'fck-e p\'e9ld\'e1ul az er\f1\'f5szakos tartalmat? Ha a c\f0\'e9lk\'f6z\'f6ns\'e9g feln\f1\'f5tt, tal\f0\'e1n igen, de akkor is figyelni kell arra, hogy \'e9rtelmes keretek k\'f6z\'f6tt maradjon (pl. ne legyen \'f6nc\'e9l\'fa er\f1\'f5szak). Az AI modellekn\f0\'e9l van be\'e9p\'edtett moder\'e1ci\'f3 (OpenAI-n\'e1l k\'fcl\'f6n moder\'e1ci\'f3s API, Anthropic-n\'e1l bels\f1\'f5 szab\f0\'e1lyok), ezeket integr\'e1lni lehet, hogy a t\'falmen\f1\'f5 k\f0\'e9r\'e9seket le\'e1ll\'edtsa. P\'e9ld\'e1ul ha valaki olyat ad meg, ami s\'e9rti a haszn\'e1lati felt\'e9teleket (pl. gy\f1\'fbl\f0\'f6letkelt\f1\'f5 tartalmat akar), a rendszer udvariasan utas\f0\'edtsa vissza. Ez nem csak etikai k\'e9rd\'e9s, hanem UX is: egy \'e1tlag user se szeretne random oda nem ill\f1\'f5 sz\f0\'e9ls\f1\'f5s\f0\'e9ges tartalomba botlani egy kalandreg\'e9ny k\'f6zep\'e9n. Sz\'f3val \'e9rdemes egy sz\f1\'fbr\'f5t futtatni a v\f0\'e9gs\f1\'f5 t\f0\'f6rt\'e9neten is, ami kisz\f1\'fbri a nem megfelel\'f5 r\f0\'e9szeket. Az AI gyakran ezt mag\'e1t\'f3l is elker\'fcli, de jobb biztosra menni. \par
\par
\'d6sszess\'e9g\'e9ben: A c\'e9l az, hogy a gener\'e1lt novella \'e9lm\'e9nye a lehet\f1\'f5 legk\f0\'f6zelebb legyen egy ember \'e1ltal \'edrt m\f1\'fb \f0\'e9lm\'e9ny\'e9hez. B\'e1r jelenlegi state-of-the-art modellek k\'f6zel j\'e1rnak ehhez, m\'e9g mindig kih\'edv\'e1s mindh\'e1rom f\f1\'f5 komponenst egyszerre teljes\f0\'edteni: koherens plot, er\f1\'f5s karakterek, m\'fbfajh\'fb st\f0\'edlus \f2\endash  pedig ezek az igaz\f0\'e1n j\'f3 sztori ism\'e9rvei (Automatic Story Generation: Challenges and Attempts). Felhaszn\'e1l\'f3i oldalr\'f3l viszont az fog sz\'e1m\'edtani, hogy \ldblquote j\'f3 volt-e olvasni\rdblquote . Ez\'e9rt ak\'e1r \'e9rdemes egy kis extra tartalmat is adni a v\'e9g\'e9n: pl. egy automatikusan gener\'e1lt \'f6sszefoglal\'f3 vagy tanuls\'e1g a t\'f6rt\'e9nethez, vagy \ldblquote a karakterek az\'f3ta\rdblquote  epil\'f3gus, mert az ilyesmi keretet ad \'e9s az olvas\'f3ban kerekebb benyom\'e1st kelt. Az olvasm\'e1nyoss\'e1got n\'f6velheti a v\'e1ltozatoss\'e1g: hosszabb m\f1\'fbn\f0\'e9l legyenek elt\'e9r\f1\'f5 jelleg\'fb jelenetek (kaland, romantika, humor keveredhet, ha illik), mert \f0\'edgy t\'f6bb \'e9rzelmet \'e9l \'e1t az olvas\'f3. Az AI-nak adhatunk erre utas\'edt\'e1st (\ldblquote sz\f1\'f5j bele egy kis humort a fesz\f0\'fclts\'e9g old\'e1s\'e1ra\rdblquote ). V\'e9g\'fcl a felhaszn\'e1l\'f3i \'e9lm\'e9ny cs\'facsa, ha a user \'fagy \'e1ll fel a t\'f6rt\'e9net v\'e9g\'e9n, hogy el\'e9gedett \'e9s meglepett \f2\endash  el\f0\'e9gedett, mert azt kapta, amit szeretett volna l\'e1tni, \'e9s kellemesen meglepett, mert az AI m\'e9g r\'e1 is tett egy lap\'e1ttal, olyat is adott, amire nem is gondolt, de tetszett neki. Ehhez kreativit\'e1s \'e9s kontroll k\'e9nyes egyens\'falya sz\'fcks\'e9ges a rendszer r\'e9sz\'e9r\f1\'f5l. \par
\par
 \par
\par
\f0\'d6sszefoglal\'e1s: Egy AI-alap\'fa novella\'edr\'f3 alkalmaz\'e1s fejleszt\'e9se sor\'e1n \'f6ssze kell hangolni a technol\'f3giai lehet\f1\'f5s\f0\'e9geket az irodalmi elv\'e1r\'e1sokkal. A plotgener\'e1l\'e1sban kombin\'e1lhatjuk a r\'e9gi bev\'e1lt s\'e9m\'e1kat a modern nyelvi modellek rugalmass\'e1g\'e1val, a karakteralkot\'e1sban seg\'edt az AI kreativit\'e1sa, de kell az emberi tervez\'e9s a m\'e9lys\'e9ghez, a dramaturgi\'e1t szab\'e1lyozhatjuk v\'e1zlatokkal \'e9s elemz\'e9sekkel, a megfelel\f1\'f5 modell(ek) kiv\f0\'e1laszt\'e1sa pedig meghat\'e1rozza a rendszer k\'e9pess\'e9geit. Az interakt\'edv funkci\'f3k bevonj\'e1k a felhaszn\'e1l\'f3t a folyamatba, n\'f6velve a szem\'e9lyre szabhat\'f3s\'e1got, m\'edg a technikai infrastrukt\'fara biztos\'edtja, hogy mindez z\'f6kken\f1\'f5mentesen m\'fbk\f0\'f6dj\'f6n. A legf\f1\'f5bb kih\f0\'edv\'e1s v\'e9gig az, hogy az AI \'e1ltal gener\'e1lt t\'f6rt\'e9net min\f1\'f5s\f0\'e9gileg meg\'fcsse azt a m\'e9rc\'e9t, amit egy emberi \'edr\'f3 munk\'e1j\'e1t\'f3l v\'e1rn\'e1nk. B\'e1r a mai AI modellek nem t\'f6k\'e9letesek, okos fejleszt\f1\'f5i strat\f0\'e9gi\'e1kkal \f2\endash  mint amilyeneket fentebb bemutattunk \endash  kihozhat\f0\'f3 bel\f1\'f5l\f0\'fck egy olyan rendszer, amely \'e9rdekfesz\'edt\f1\'f5, konzisztens \f0\'e9s \'e9lvezetes novell\'e1kat hoz l\'e9tre a felhaszn\'e1l\'f3k \'f6tleteib\f1\'f5l. A fejleszt\f0\'e9si folyamat sor\'e1n folyamatos iter\'e1ci\'f3val \'e9s a felhaszn\'e1l\'f3i visszajelz\'e9sek be\'e9p\'edt\'e9s\'e9vel juthatunk el od\'e1ig, hogy a v\'e9geredm\'e9ny val\'f3ban leny\f1\'fbg\f0\'f6z\f1\'f5 \f0\'e9lm\'e9nyt ny\'fajtson: az olvas\'f3 elmer\'fclhet egy AI \'e1ltal sz\f1\'f5tt t\f0\'f6rt\'e9netben, ami az \f1\'f5 elk\f0\'e9pzel\'e9seib\f1\'f5l n\'f5tt ki, m\f0\'e9gis tartogat sz\'e1m\'e1ra is meglepet\'e9seket. \par
\par
 \lang14\par
}
 